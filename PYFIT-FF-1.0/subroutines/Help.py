help_str = """Usage: python3 pyfit-ff.py --compute-gis --run-training

Options:
	-h --help            Print this message.
	
	-g --compute-gis     Compute structural parameters using poscar file data.

	-t --run-training    Train the neural network file on existing structure 
	                     parameter data. If --compute-gis is specified, the
	                     structure parameters generated by that process can
	                     be immediately used. Set config.py values appropriately.
	                     This is the only flag specified by default if no others
	                     are specified.

	-e --graph-error     Display a graph of the loss of the network as a function
	                     of the training iteration after training is complete.
	                     This will load the error data from the file specified as
	                     LOSS_LOG_PATH in Config.py.
	                     You must have matplotlib installed to use this option.

	-v --graph-val       Display a graph of the validation error as a function
	                     of the training iteration after training is complete.
	                     This will load the error data from the file specified as
	                     VALIDATION_LOG_PATH in Config.py.
	                     You must have matplotlib installed to use this option.

	-s --group-error     Display a graph of the error of each group as a function
	                     of the training iteration.
	                     You must install mpldatacursor to use this feature.
	                     cmd: sudo pip3 install mpldatacursor

	-i --highlight       If you want to highlight a particular group with a different
	                     icon in a group error scatterplot, specify the name of that
	                     group after this argument.

	-p --cpu             Force all operations onto the cpu. The default is to use the
	                     GPU if available.

	-r --randomize-nn    Regardless of any configuration values, this flag will cause
	                     the neural network to be randomized before training. This 
	                     not effect the neural network input file.

	-n --n-threads       Force the process to use a certain number of threads for 
	                     training. Often times, a very small model will not speed
	                     up when using more than one thread. Follow this argument
	                     immediately with a number between 1 and the number of threads
	                     your hardware can run simultaneously.

	-d --directory       Use this to specify an output directory to append to the
	                     current output directory as specified in Config.py. This is
	                     useful if you want to run multiple instances of pyfit-ff at
	                     the same time and you don't want them to overwrite eachothers
	                     output files. Follow this argument immediately with a path name.
	                     The path will be created if it doesn't exist.

	-u --unsupervised    Program will minimize the number of print calls made during 
	                     runtime. This is useful when piping stdout into a file, because
	                     the normal progress bars use ANSI escape sequences that will 
	                     cause a line to be written to the file for every progress bar
	                     update. In unsupervised mode, each progress bar will only 
	                     occupy one line in the stdout file.

	-c --compare         This must be the only option if specified. Will compare
	                     the two training set files listed after this argument.
	                     The program will summarize the mean, min, max and 
	                     standard deviation of the difference between the structure
	                     parameters between the two files. It will also graph the
	                     flattened structure parameters against eachother so that
	                     any error trends can be seen. A maximum of the first 
	                     100,000 will be graphed in order to avoid crashing matplotlib.

	Experimental

	--target-errors      If this argument is specified, follow it by first, a default 
	                     error to target for all structural groups. All subsequent 
	                     arguments should be in the following format <group>:<target>.
	                     Any groups specified will be set to have the target error given.
	                     This should be the last argument.

Configuration:
	The file Config.py contains the majority of the important configuration
	parameters for the program. See the comments in that file for more details.

Notes:
	1) If the progress bars look bad, consider widening your terminal window.
	   A width of 105 characters should suffice.
	2) Neighbor list and Structure Parameter generation take somewhere on the
	   order of n^2 time where n is the number of atoms. Expect it to take a 
	   while for large datasets. Typical times are around 30 seconds for a 
	   datset of about 2,000 structures with a total of 14,000 atoms.
	3) You can use the control-c interrupt during the training process to quit 
	   early. The program will save the network in its current state and write 
	   log information.

Examples:
	python3 pyfit-ff.py -gtev
	python3 pyfit-ff.py --compute-gis --run-training --graph-error
	python3 pyfit-ff.py -e
	python3 pyfit-ff.py -t
	python3 pyfit-ff.py --compare train01.dat train02.dat
	python3 pyfit-ff.py -s -i Si_B17
	Python3 pyfit-ff.py -t -q 0.020 Si_B17:0.001
"""