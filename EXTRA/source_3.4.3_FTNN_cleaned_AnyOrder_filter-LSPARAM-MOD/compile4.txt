
    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: disabled
  -inline-max-per-compile: disabled


Begin optimization report for: dfpmin(VecDoub &, double, int &, double &, double (&)(VecDoub &))

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (dfpmin(VecDoub &, double, int &, double &, double (&)(VecDoub &))) [1] nr.cpp(272,1)
  -> INLINE: (282,13) NRvector<double>::size(const NRvector<double> *) const
  -> (283,20) NRmatrix<Doub>::~NRmatrix(NRmatrix<Doub> *)
  -> INLINE: (283,20) NRmatrix<Doub>::NRmatrix(NRmatrix<Doub> *, int, int)
  -> (284,14) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (284,14) NRvector<double>::NRvector(NRvector<double> *, int)
  -> (285,13) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (285,13) NRvector<double>::NRvector(NRvector<double> *, int)
  -> (286,15) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (286,15) NRvector<double>::NRvector(NRvector<double> *, int)
  -> (287,16) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (287,16) NRvector<double>::NRvector(NRvector<double> *, int)
  -> (288,14) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (288,14) NRvector<double>::NRvector(NRvector<double> *, int)
  -> INDIRECT-: (290,8) 
  -> (291,3) df(VecDoub &, VecDoub &, double (&)(VecDoub &))
  -> INLINE: (294,35) NRmatrix<Doub>::operator[](NRmatrix<Doub> *, int)
  -> INLINE: (295,11) NRmatrix<Doub>::operator[](NRmatrix<Doub> *, int)
  -> INLINE: (296,7) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (296,15) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (297,13) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (297,18) NRvector<double>::operator[](NRvector<double> *, int)
  -> (302,5) lnsrch(VecDoub &, double, VecDoub &, VecDoub &, VecDoub &, double &, double, bool &, double (&)(VecDoub &))
  -> INLINE: (307,9) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (307,19) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (307,26) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (308,8) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (308,18) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (312,21) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (312,26) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (312,26) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (316,7) NRmatrix<Doub>::~NRmatrix(NRmatrix<Doub> *)
  -> INLINE: (316,7) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (316,7) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (316,7) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (316,7) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (316,7) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (318,31) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (318,38) NRvector<double>::operator[](NRvector<double> *, int)
  -> (319,5) df(VecDoub &, VecDoub &, double (&)(VecDoub &))
  -> INLINE: (323,20) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (323,25) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (323,25) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (327,7) NRmatrix<Doub>::~NRmatrix(NRmatrix<Doub> *)
  -> INLINE: (327,7) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (327,7) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (327,7) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (327,7) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (327,7) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (329,31) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (329,38) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (329,46) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (331,10) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (332,34) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (332,47) NRmatrix<Doub>::operator[](NRmatrix<Doub> *, int)
  -> INLINE: (332,56) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (336,16) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (336,22) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (337,16) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (337,23) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (338,22) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (339,22) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (345,33) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (345,45) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (345,58) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (348,10) NRmatrix<Doub>::operator[](NRmatrix<Doub> *, int)
  -> INLINE: (348,26) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (348,32) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (349,17) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (349,24) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (349,36) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (349,42) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (355,9) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (356,33) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (356,46) NRmatrix<Doub>::operator[](NRmatrix<Doub> *, int)
  -> INLINE: (356,54) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (358,3) NRmatrix<Doub>::~NRmatrix(NRmatrix<Doub> *)
  -> INLINE: (358,3) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (358,3) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (358,3) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (358,3) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (358,3) NRvector<double>::~NRvector(NRvector<double> *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at nrmatrix.h(148,3) inlined into nr.cpp(283,20)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between v line 148 and v line 148
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at nrmatrix.h(148,3) inlined into nr.cpp(283,20)
<Remainder>
LOOP END

LOOP BEGIN at nr.cpp(293,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria

   LOOP BEGIN at nr.cpp(294,5)
      remark #25408: memset generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at nr.cpp(294,5)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between v line 294 and v line 294
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at nr.cpp(294,5)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at nr.cpp(306,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at nr.cpp(311,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at nr.cpp(318,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at nr.cpp(322,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at nr.cpp(329,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at nr.cpp(332,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at nr.cpp(335,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at nr.cpp(345,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at nr.cpp(347,2)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at nr.cpp(356,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at nr.cpp(300,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at nr.cpp(330,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END

   LOOP BEGIN at nr.cpp(346,7)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END

   LOOP BEGIN at nr.cpp(354,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

nr.cpp(294,35):remark #34026: call to memset implemented as a call to optimized library version
===========================================================================

Begin optimization report for: lnsrch(VecDoub &, double, VecDoub &, VecDoub &, VecDoub &, double &, double, bool &, double (&)(VecDoub &))

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (lnsrch(VecDoub &, double, VecDoub &, VecDoub &, VecDoub &, double &, double, bool &, double (&)(VecDoub &))) [2] nr.cpp(466,1)
  -> INLINE: (472,16) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (475,31) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (475,36) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (477,42) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (479,33) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (479,38) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (483,18) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (483,23) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (483,23) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (490,26) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (490,36) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (490,48) NRvector<double>::operator[](NRvector<double> *, int)
  -> INDIRECT-: (491,9) 
  -> INLINE: (493,28) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (493,38) NRvector<double>::operator[](NRvector<double> *, int)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at nr.cpp(475,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at nr.cpp(477,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at nr.cpp(479,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at nr.cpp(482,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at nr.cpp(490,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at nr.cpp(493,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at nr.cpp(518,5)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: df(VecDoub &, VecDoub &, double (&)(VecDoub &))

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (df(VecDoub &, VecDoub &, double (&)(VecDoub &))) [3] nr.cpp(365,1)
  -> INLINE: (370,13) NRvector<double>::size(const NRvector<double> *) const
  -> (371,16) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (371,16) NRvector<double>::NRvector(NRvector<double> *, const NRvector<double> &)
  -> INDIRECT-: (379,10) 
  -> INLINE: (394,16) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (397,9) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (398,13) NRvector<double>::operator[](NRvector<double> *, int)
  -> INDIRECT-: (399,12) 
  -> INLINE: (400,9) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (401,9) NRvector<double>::operator[](NRvector<double> *, int)
  -> (414,29) computeNNDeriv(VecDoub &, VecDoub &)
  -> (415,29) computePINNDeriv(VecDoub &, VecDoub &)
  -> INLINE: (451,3) NRvector<double>::~NRvector(NRvector<double> *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at nrvector.h(68,5) inlined into nr.cpp(371,16)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at nrvector.h(68,5) inlined into nr.cpp(371,16)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at nrvector.h(68,5) inlined into nr.cpp(371,16)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at nr.cpp(393,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

    Report from: Code generation optimizations [cg]

nrvector.h(68,30):remark #34026: call to memcpy implemented as a call to optimized library version
===========================================================================

Begin optimization report for: computePINNDeriv(VecDoub &, VecDoub &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (computePINNDeriv(VecDoub &, VecDoub &)) [4] derivatives.cpp(141,1)
  -> INLINE: (143,21) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (143,21) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (143,35) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (146,23) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (146,23) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (147,8) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (153,21) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (153,21) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (154,6) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (154,19) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (154,52) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (160,19) NRvector<double>::size(const NRvector<double> *) const
  -> (160,26) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (160,26) NRvector<double>::NRvector(NRvector<double> *, int, const double &)
  -> (162,33) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (162,33) NRvector<double>::NRvector(NRvector<double> *, int, const double &)
  -> INLINE: (168,9) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (175,12) NRvector<double>::operator[](NRvector<double> *, int)
  -> (179,44) NRmatrix<Doub>::~NRmatrix(NRmatrix<Doub> *)
  -> INLINE: (179,44) NRmatrix<Doub>::NRmatrix(NRmatrix<Doub> *, int, int, const Doub &)
  -> INLINE: (187,12) NRmatrix<Doub>::operator[](NRmatrix<Doub> *, int)
  -> INLINE: (190,8) NRmatrix<Doub>::operator[](NRmatrix<Doub> *, int)
  -> INLINE: (196,7) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (196,26) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (196,38) NRmatrix<Doub>::operator[](NRmatrix<Doub> *, int)
  -> INLINE: (198,12) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (200,3) NRmatrix<Doub>::~NRmatrix(NRmatrix<Doub> *)
  -> INLINE: (200,3) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (217,21) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (217,21) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (218,6) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (218,18) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (219,3) NRvector<double>::~NRvector(NRvector<double> *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at derivatives.cpp(143,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at derivatives.cpp(146,23)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at derivatives.cpp(153,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at nrvector.h(47,5) inlined into derivatives.cpp(160,26)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at nrvector.h(47,5) inlined into derivatives.cpp(160,26)
   <Peeled>
   LOOP END

   LOOP BEGIN at nrvector.h(47,5) inlined into derivatives.cpp(160,26)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at nrvector.h(47,5) inlined into derivatives.cpp(160,26)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at nrvector.h(47,5) inlined into derivatives.cpp(162,33)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at nrvector.h(47,5) inlined into derivatives.cpp(162,33)
   <Peeled>
   LOOP END

   LOOP BEGIN at nrvector.h(47,5) inlined into derivatives.cpp(162,33)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at nrvector.h(47,5) inlined into derivatives.cpp(162,33)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at derivatives.cpp(166,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at nrmatrix.h(156,3) inlined into derivatives.cpp(179,44)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between v line 156 and v line 156
   remark #25436: completely unrolled by 7  
LOOP END

LOOP BEGIN at nrmatrix.h(157,3) inlined into derivatives.cpp(179,44)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between v line 157 and v line 157

   LOOP BEGIN at nrmatrix.h(157,24) inlined into derivatives.cpp(179,44)
      remark #25408: memset generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at nrmatrix.h(157,24) inlined into derivatives.cpp(179,44)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between v line 157 and v line 157
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at nrmatrix.h(157,24) inlined into derivatives.cpp(179,44)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at derivatives.cpp(181,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between v line 187 and v line 190

   LOOP BEGIN at derivatives.cpp(182,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between v line 187 and v line 190

      LOOP BEGIN at derivatives.cpp(183,2)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between v line 187 and v line 187

         LOOP BEGIN at derivatives.cpp(184,4)
            remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
            remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at derivatives.cpp(196,7)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at derivatives.cpp(217,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at derivatives.cpp(145,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

LOOP BEGIN at derivatives.cpp(164,5)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at derivatives.cpp(165,7)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END

LOOP BEGIN at derivatives.cpp(174,5)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

LOOP BEGIN at derivatives.cpp(194,5)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

    Report from: Code generation optimizations [cg]

nrvector.h(47,30):remark #34026: call to memset implemented as a call to optimized library version
nrvector.h(47,30):remark #34026: call to memset implemented as a call to optimized library version
nrmatrix.h(157,44):remark #34026: call to memset implemented as a call to optimized library version
===========================================================================

Begin optimization report for: computeNNDeriv(VecDoub &, VecDoub &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (computeNNDeriv(VecDoub &, VecDoub &)) [5] derivatives.cpp(40,1)
  -> INLINE: (51,21) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (51,21) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (51,35) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (53,3) PartitionNNetParams(VecDoub &)
    -> INLINE: NNetInterface.cpp:(70,43) NRvector<double>::operator[](NRvector<double> *, int)
    -> INLINE: NNetInterface.cpp:(75,29) NRvector<double>::operator[](NRvector<double> *, int)
    -> INLINE: NNetInterface.cpp:(79,14) NRvector<double>::size(const NRvector<double> *) const
    -> INLINE: NNetInterface.cpp:(81,9) NRvector<double>::size(const NRvector<double> *) const
  -> (55,11) NRmatrix<Doub>::~NRmatrix(NRmatrix<Doub> *)
  -> INLINE: (55,11) NRmatrix<Doub>::NRmatrix(NRmatrix<Doub> *)
  -> INLINE: (59,14) NRmatrix<Doub>::assign(NRmatrix<Doub> *, int, int, const Doub &)
  -> INLINE: (59,48) NRvector<double>::size(const NRvector<double> *) const
  -> (64,7) iCompute_NN_Deriv(int, MatDoub &)
  -> INLINE: (67,25) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (67,25) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (68,3) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (68,18) NRmatrix<Doub>::operator[](NRmatrix<Doub> *, int)
  -> INLINE: (88,21) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (88,21) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (89,6) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (89,19) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (89,52) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (90,3) NRmatrix<Doub>::~NRmatrix(NRmatrix<Doub> *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at derivatives.cpp(51,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at NNetInterface.cpp(69,7) inlined into derivatives.cpp(53,3)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at NNetInterface.cpp(74,5) inlined into derivatives.cpp(53,3)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at nrmatrix.h(284,5) inlined into derivatives.cpp(59,14)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between v line 284 and v line 284
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at nrmatrix.h(284,5) inlined into derivatives.cpp(59,14)
<Remainder>
LOOP END

LOOP BEGIN at nrmatrix.h(286,3) inlined into derivatives.cpp(59,14)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between v line 286 and v line 286

   LOOP BEGIN at nrmatrix.h(286,25) inlined into derivatives.cpp(59,14)
      remark #25408: memset generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at nrmatrix.h(286,25) inlined into derivatives.cpp(59,14)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between v line 286 and v line 286
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at nrmatrix.h(286,25) inlined into derivatives.cpp(59,14)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at derivatives.cpp(61,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

   LOOP BEGIN at derivatives.cpp(63,7)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at derivatives.cpp(63,7)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at derivatives.cpp(63,7)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at derivatives.cpp(67,25)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at derivatives.cpp(88,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at NNetInterface.cpp(66,3) inlined into derivatives.cpp(53,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at NNetInterface.cpp(68,5) inlined into derivatives.cpp(53,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END

LOOP BEGIN at derivatives.cpp(58,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at derivatives.cpp(66,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

nrmatrix.h(286,46):remark #34026: call to memset implemented as a call to optimized library version
derivatives.cpp(63,34):remark #34026: call to memcpy implemented as a call to optimized library version
===========================================================================

Begin optimization report for: iCompute_NN_Deriv(int, MatDoub &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (iCompute_NN_Deriv(int, MatDoub &)) [6] derivatives.cpp(94,1)
  -> (100,3) evaluate_nnet()
  -> INLINE: (103,3) compute_SMat()
    -> (9,3) Init_SMat()
  -> INLINE: (114,19) NRmatrix<Doub>::operator[](NRmatrix<Doub> *, int)
  -> INLINE: (116,7) NRmatrix<Doub>::operator[](NRmatrix<Doub> *, int)
  -> INLINE: (124,17) NRmatrix<Doub>::operator[](NRmatrix<Doub> *, int)
  -> INLINE: (126,5) NRmatrix<Doub>::operator[](NRmatrix<Doub> *, int)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at derivatives.cpp(14,3) inlined into derivatives.cpp(103,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at derivatives.cpp(16,7) inlined into derivatives.cpp(103,3)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

      LOOP BEGIN at derivatives.cpp(17,2) inlined into derivatives.cpp(103,3)
         remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
      LOOP END
   LOOP END

   LOOP BEGIN at derivatives.cpp(24,7) inlined into derivatives.cpp(103,3)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

      LOOP BEGIN at derivatives.cpp(25,2) inlined into derivatives.cpp(103,3)
         remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

         LOOP BEGIN at derivatives.cpp(27,4) inlined into derivatives.cpp(103,3)
            remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
            remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at derivatives.cpp(105,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at derivatives.cpp(109,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at derivatives.cpp(111,7)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 114 and F64 line 116

         LOOP BEGIN at derivatives.cpp(112,2)
         <Predicate Optimized v3>
            remark #25423: Condition at line 114 hoisted out of this loop
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
         LOOP END

         LOOP BEGIN at derivatives.cpp(112,2)
         <Predicate Optimized v4>
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
         LOOP END

         LOOP BEGIN at derivatives.cpp(112,2)
         <Predicate Optimized v2>
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 116 and this line 116
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at derivatives.cpp(112,2)
         <Remainder, Predicate Optimized v2>
            remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
         LOOP END
      LOOP END

      LOOP BEGIN at derivatives.cpp(122,7)
      <Predicate Optimized v3>
         remark #25423: Condition at line 124 hoisted out of this loop
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
      LOOP END

      LOOP BEGIN at derivatives.cpp(122,7)
      <Predicate Optimized v4>
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
      LOOP END

      LOOP BEGIN at derivatives.cpp(122,7)
      <Predicate Optimized v2>
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between F64 line 126 and this line 126
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at derivatives.cpp(122,7)
      <Remainder, Predicate Optimized v2>
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: smalloc(int, const char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (smalloc(int, const char *)) [7] mem.cpp(10,1)

===========================================================================

Begin optimization report for: srealloc(void *, int, const char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (srealloc(void *, int, const char *)) [8] mem.cpp(28,1)

===========================================================================

Begin optimization report for: sfree(void *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (sfree(void *)) [9] mem.cpp(49,1)

===========================================================================

Begin optimization report for: compareAbsMaxVec(const VecDoub &, double, double &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (compareAbsMaxVec(const VecDoub &, double, double &)) [10] util.cpp(62,1)
  -> INLINE: (65,9) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (70,23) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (70,23) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (71,17) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (73,15) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (73,32) NRvector<double>::operator[](const NRvector<double> *, int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at util.cpp(70,23)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END
===========================================================================

Begin optimization report for: __sti__$E()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__sti__$E()) [11] <compiler generated>
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti__xicom()
    -> INLINE: nr.cpp:(14,15) NRvector<double>::NRvector(NRvector<double> *)
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti__pcom()
    -> INLINE: nr.cpp:(14,9) NRvector<double>::NRvector(NRvector<double> *)

===========================================================================

Begin optimization report for: __sti__pcom()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti__pcom()) <compiler generated>

===========================================================================

Begin optimization report for: __sti__xicom()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti__xicom()) <compiler generated>

===========================================================================

Begin optimization report for: __sti__$E()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__sti__$E()) [14] <compiler generated>

===========================================================================

Begin optimization report for: NRvector<double>::NRvector(NRvector<double> *, int, const double &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (NRvector<double>::NRvector(NRvector<double> *, int, const double &)) nrvector.h(43,1)

===========================================================================

Begin optimization report for: NRmatrix<Doub>::NRmatrix(NRmatrix<Doub> *, int, int, const Doub &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (NRmatrix<Doub>::NRmatrix(NRmatrix<Doub> *, int, int, const Doub &)) nrmatrix.h(153,1)

===========================================================================

Begin optimization report for: compute_SMat()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (compute_SMat()) [17] derivatives.cpp(7,1)
  -> (9,3) Init_SMat()


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at derivatives.cpp(14,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at derivatives.cpp(16,7)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

      LOOP BEGIN at derivatives.cpp(17,2)
         remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
      LOOP END
   LOOP END

   LOOP BEGIN at derivatives.cpp(24,7)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

      LOOP BEGIN at derivatives.cpp(25,2)
         remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

         LOOP BEGIN at derivatives.cpp(27,4)
            remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
            remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: __sti__$E()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__sti__$E()) [18] <compiler generated>

===========================================================================

Begin optimization report for: search_file(const char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (search_file(const char *)) [19] util.cpp(13,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at util.cpp(20,5)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: compareAbsMaxArray(int, const double *, double, double &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (compareAbsMaxArray(int, const double *, double, double &)) [20] util.cpp(40,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at util.cpp(48,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between tmp line 51 and tmp line 51
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at util.cpp(48,5)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: Init_SMat()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Init_SMat()) [21] derivatives.cpp(223,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at derivatives.cpp(225,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between layer line 227 and layer line 228

   LOOP BEGIN at derivatives.cpp(228,7)
      remark #25408: memset generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at derivatives.cpp(228,7)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between layer line 228 and layer line 228
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at derivatives.cpp(228,7)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

derivatives.cpp(228,34):remark #34026: call to memset implemented as a call to optimized library version
===========================================================================

Begin optimization report for: errmsg(const char *, const char *, const char *, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (errmsg(const char *, const char *, const char *, int)) [22] util.cpp(8,1)

===========================================================================

    Report from: Profile guided optimizations [pgo]



Profile feedback used a statically estimated profile for the following routines:

  File: <compiler generated>
        __sti__$E()
        __sti__$E()
        __sti__$E()

  File: derivatives.cpp
        compute_SMat()(7)
        computeNNDeriv(VecDoub &, VecDoub &)(40)
        iCompute_NN_Deriv(int, MatDoub &)(94)
        computePINNDeriv(VecDoub &, VecDoub &)(141)
        Init_SMat()(223)

  File: mem.cpp
        smalloc(int, const char *)(10)
        srealloc(void *, int, const char *)(28)
        sfree(void *)(49)

  File: nr.cpp
        dfpmin(VecDoub &, double, int &, double &, double (&)(VecDoub &))(272)
        df(VecDoub &, VecDoub &, double (&)(VecDoub &))(365)
        lnsrch(VecDoub &, double, VecDoub &, VecDoub &, VecDoub &, double &, double, bool &, double (&)(VecDoub &))(466)

  File: util.cpp
        errmsg(const char *, const char *, const char *, int)(8)
        search_file(const char *)(13)
        compareAbsMaxArray(int, const double *, double, double &)(40)
        compareAbsMaxVec(const VecDoub &, double, double &)(62)


  0 out of 18 routine(s) used training profile data for PGO feedback
  0 out of 18 routine(s) were unable to use training profile data for PGO feedback
  0 out of 18 routine(s) were unable to find training profile data for PGO feedback
  18 out of 18 routine(s) used a static estimate profile for PGO feedback



