
    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: disabled
  -inline-max-per-compile: disabled


Begin optimization report for: main(int, char **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (main(int, char **)) [1] fit.cpp(25,1)
  -> (33,5) errmsg(const char *, const char *, const char *, int)
  -> (79,13) readinput(const char *)
  -> (82,5) errmsg(const char *, const char *, const char *, int)
  -> (89,16) ReadBOPParam(const char *)
  -> (109,5) ReadNNetParams(const char *, VecDoub &, VecDoub &, double &)
  -> (135,7) errmsg(const char *, const char *, const char *, int)
  -> (145,5) ReadDatabase(const char *)
  -> (149,7) errmsg(const char *, const char *, const char *, int)
  -> (158,5) CreateNeighborList()
  -> (167,3) mpi_dist_data3()
  -> INLINE: (197,7) compute_LSP()
    -> INLINE: compute.cpp:(1578,24) create<double>(double *&, int, const char *)
      -> INLINE: mem.h:(16,17) smalloc(int, const char *)
    -> compute.cpp:(1585,5) compute_atomic_LSP(int, const double *, double *)
  -> (202,7) WriteLSP_mpi()
  -> (211,7) read_Modified_Gis_cpus(char *)
  -> (226,51) WriteMatrixFormat(FILE *)
  -> (275,19) ReadData(const char *, Struc_Data *&, int &, int &)
  -> (303,7) CreateNeighborList(Struc_Data *&, int)
  -> (313,7) ComputeLocalStrucParam(Struc_Data *&, int)
  -> (422,7) WriteBOPParam(FILE *)
  -> (428,9) WriteNNetParam(FILE *)
  -> (443,5) DFP_minimize()
  -> (446,5) GeneticAlgo(VecDoub &, const VecDoub &)
  -> (469,7) WriteBOPParam(FILE *)
  -> (473,9) errmsg(const char *, const char *, const char *, int)
  -> (477,7) WriteBOPParam(FILE *)
  -> (482,7) WriteNNetParam(FILE *)
  -> (486,2) errmsg(const char *, const char *, const char *, int)
  -> (490,7) WriteNNetParam(FILE *)
  -> (495,5) WriteProperty()
  -> INLINE: (500,18) fmin(double, double, double (*)(double), double)
    -> search.cpp:(34,12) crystalFunk(double)
    -> search.cpp:(66,10) crystalFunk(double)
  -> (502,7) set_struc(const char *, double, int &)
  -> (503,12) crystal_eng(const double (*)[3], double **, int)
  -> INLINE: (506,16) VolumePerAtom(const double (*)[3], int)
  -> (515,7) surf100()
  -> (516,7) surf110()
  -> (517,7) surf111()
  -> (521,11) set_vac_supercell(const char *, double, int &)
  -> (522,19) crystal_eng(const double (*)[3], double **, int)
  -> (527,11) set_Td_int(const char *, double, int &)
  -> (528,19) crystal_eng(const double (*)[3], double **, int)
  -> (533,11) set_Octa_int(const char *, double, int &)
  -> (534,19) crystal_eng(const double (*)[3], double **, int)
  -> (539,11) set_dumbbell_int(const char *, const char *, double, int &)
  -> (540,19) crystal_eng(const double (*)[3], double **, int)
  -> (545,11) set_dumbbell_int(const char *, const char *, double, int &)
  -> (546,19) crystal_eng(const double (*)[3], double **, int)
  -> (551,11) set_dumbbell_int(const char *, const char *, double, int &)
  -> (552,19) crystal_eng(const double (*)[3], double **, int)
  -> (557,11) set_HEX_int(const char *, double, int &)
  -> (558,19) crystal_eng(const double (*)[3], double **, int)
  -> (563,11) set_B_int(const char *, double, int &)
  -> (564,19) crystal_eng(const double (*)[3], double **, int)
  -> (569,43) BulkModulus()
  -> (570,20) c11()
  -> (572,26) ShearModulus()
  -> (575,34) c44()
  -> (578,7) SFp111()
  -> (579,7) SFp100()
  -> (580,7) SFp110()
  -> (603,7) EOS(const char *, double, double, double)
  -> (604,7) EOS(const char *, double, double, double)
  -> (605,7) EOS(const char *, double, double, double)
  -> (606,7) EOS(const char *, double, double, double)
  -> (607,7) EOS(const char *, double, double, double)
  -> (608,7) EOS(const char *, double, double, double)
  -> (609,7) EOS(const char *, double, double, double)
  -> (610,7) EOS(const char *, double, double, double)
  -> (611,7) EOS(const char *, double, double, double)
  -> (612,7) EOS(const char *, double, double, double)
  -> (613,7) EOS(const char *, double, double, double)
  -> (614,7) EOS(const char *, double, double, double)
  -> (615,7) EOS(const char *, double, double, double)
  -> (616,7) EOS(const char *, double, double, double)
  -> (617,7) EOS(const char *, double, double, double)
  -> (618,7) EOS(const char *, double, double, double)
  -> (619,7) EOS(const char *, double, double, double)
  -> (620,7) EOS(const char *, double, double, double)
  -> (621,7) EOS(const char *, double, double, double)
  -> (622,7) EOS(const char *, double, double, double)
  -> (650,3) freemem()


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at fit.cpp(187,7)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at compute.cpp(1577,3) inlined into fit.cpp(197,7)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

   LOOP BEGIN at compute.cpp(1579,5) inlined into fit.cpp(197,7)
      remark #25408: memset generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at compute.cpp(1579,5) inlined into fit.cpp(197,7)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between atoms line 1579 and atoms line 1579
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at compute.cpp(1579,5) inlined into fit.cpp(197,7)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at fit.cpp(415,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at search.cpp(24,3) inlined into fit.cpp(500,18)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at search.cpp(34,3) inlined into fit.cpp(500,18)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

    Report from: Code generation optimizations [cg]

compute.cpp(1579,29):remark #34026: call to memset implemented as a call to optimized library version
===========================================================================

Begin optimization report for: EOS(const char *, double, double, double)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EOS(const char *, double, double, double)) [2] compute.cpp(1266,1)
  -> (1277,3) set_struc(const char *, double, int &)
  -> INLINE: (1290,11) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> INLINE: (1322,11) VolumePerAtom(const double (*)[3], int)
  -> (1330,19) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (1330,19) NRvector<double>::NRvector(NRvector<double> *, int)
  -> (1331,20) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (1331,20) NRvector<double>::NRvector(NRvector<double> *, int, const double *)
  -> (1332,20) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (1332,20) NRvector<double>::NRvector(NRvector<double> *, int, const double *)
  -> INLINE: (1333,7) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (1333,7) NRvector<double>::~NRvector(NRvector<double> *)
  -> (1333,13) Area(const VecDoub *, const VecDoub *, VecDoub &)
  -> (1333,18) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (1333,18) NRvector<double>::NRvector(NRvector<double> *, const NRvector<double> &)
  -> (1333,21) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (1333,21) NRvector<double>::NRvector(NRvector<double> *, const NRvector<double> &)
  -> INLINE: (1334,5) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (1334,5) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (1334,5) NRvector<double>::~NRvector(NRvector<double> *)
  -> (1337,9) crystal_eng(const double (*)[3], double **, int, const char *)
  -> INLINE: (1346,3) destroy<double>(double **)
    -> INLINE: mem.h:(85,5) sfree(void *)
    -> INLINE: mem.h:(86,5) sfree(void *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at mem.h(47,5) inlined into compute.cpp(1290,11)
<Peeled>
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into compute.cpp(1290,11)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into compute.cpp(1290,11)
<Remainder>
LOOP END

LOOP BEGIN at compute.cpp(1303,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at compute.cpp(1312,5)
   <Distributed chunk1>
      remark #25426: Loop Distributed (4 way) 
      remark #15301: PARTIAL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at compute.cpp(1312,5)
   <Peeled, Distributed chunk2>
      remark #25436: completely unrolled by 1  
   LOOP END

   LOOP BEGIN at compute.cpp(1312,5)
   <Distributed chunk2>
      remark #15301: PARTIAL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at compute.cpp(1312,5)
   <Distributed chunk3>
      remark #15301: PARTIAL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at compute.cpp(1312,5)
   <Distributed chunk4>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between basis line 1317 and basis line 1317

      LOOP BEGIN at compute.cpp(1316,7)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between basis line 1317 and basis0 line 1317
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at compute.cpp(1316,7)
      <Remainder>
      LOOP END
   LOOP END

   LOOP BEGIN at nrvector.h(58,5) inlined into compute.cpp(1331,20)
   <Peeled>
   LOOP END

   LOOP BEGIN at nrvector.h(58,5) inlined into compute.cpp(1331,20)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at nrvector.h(58,5) inlined into compute.cpp(1331,20)
   <Remainder>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at nrvector.h(58,5) inlined into compute.cpp(1331,20)
   <Remainder>
   LOOP END

   LOOP BEGIN at nrvector.h(58,5) inlined into compute.cpp(1332,20)
   <Peeled>
   LOOP END

   LOOP BEGIN at nrvector.h(58,5) inlined into compute.cpp(1332,20)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at nrvector.h(58,5) inlined into compute.cpp(1332,20)
   <Remainder>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at nrvector.h(58,5) inlined into compute.cpp(1332,20)
   <Remainder>
   LOOP END

   LOOP BEGIN at nrvector.h(68,5) inlined into compute.cpp(1333,18)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at nrvector.h(68,5) inlined into compute.cpp(1333,18)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at nrvector.h(68,5) inlined into compute.cpp(1333,18)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END

   LOOP BEGIN at nrvector.h(68,5) inlined into compute.cpp(1333,21)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at nrvector.h(68,5) inlined into compute.cpp(1333,21)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at nrvector.h(68,5) inlined into compute.cpp(1333,21)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END

   LOOP BEGIN at compute.cpp(1312,5)
   <Remainder, Distributed chunk1>
      remark #25436: completely unrolled by 1  
   LOOP END

   LOOP BEGIN at compute.cpp(1312,5)
   <Remainder, Distributed chunk3>
      remark #25436: completely unrolled by 1  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

nrvector.h(68,30):remark #34026: call to memcpy implemented as a call to optimized library version
nrvector.h(68,30):remark #34026: call to memcpy implemented as a call to optimized library version
===========================================================================

Begin optimization report for: crystal_eng(const double (*)[3], double **, int, const char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (crystal_eng(const double (*)[3], double **, int, const char *)) [3] compute.cpp(1476,1)
  -> INLINE: (1482,11) create<double>(double *&, int, const char *)
    -> INLINE: mem.h:(16,17) smalloc(int, const char *)
  -> INLINE: (1483,12) create<int>(int *&, int, const char *)
    -> INLINE: mem.h:(16,17) smalloc(int, const char *)
  -> (1488,3) One_NeighborList(const double (*)[3], double **, int, int *&, double *&)
  -> INLINE: (1494,5) NRvector<double>::~NRvector(NRvector<double> *)
  -> (1494,9) Energy(const int *, const double *, int, const VecDoub *)
  -> (1494,35) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (1494,35) NRvector<double>::NRvector(NRvector<double> *, const NRvector<double> &)
  -> INLINE: (1498,5) PartitionNNetParams(VecDoub &)
    -> INLINE: NNetInterface.cpp:(70,43) NRvector<double>::operator[](NRvector<double> *, int)
    -> INLINE: NNetInterface.cpp:(75,29) NRvector<double>::operator[](NRvector<double> *, int)
    -> INLINE: NNetInterface.cpp:(79,14) NRvector<double>::size(const NRvector<double> *) const
    -> INLINE: NNetInterface.cpp:(81,9) NRvector<double>::size(const NRvector<double> *) const
  -> (1501,5) iCompute_LSP(const int *, const double *, int, double *)
  -> INLINE: (1503,9) NNET_Eng(const double *, int)
    -> INLINE: NNetInterface.cpp:(496,5) NNetOutput(double &, int)
      -> (452,3) evaluate_nnet()
  -> INLINE: (1507,5) PartitionNNetParams(VecDoub &)
    -> INLINE: NNetInterface.cpp:(70,43) NRvector<double>::operator[](NRvector<double> *, int)
    -> INLINE: NNetInterface.cpp:(75,29) NRvector<double>::operator[](NRvector<double> *, int)
    -> INLINE: NNetInterface.cpp:(79,14) NRvector<double>::size(const NRvector<double> *) const
    -> INLINE: NNetInterface.cpp:(81,9) NRvector<double>::size(const NRvector<double> *) const
  -> (1510,5) iCompute_LSP(const int *, const double *, int, double *)
  -> (1512,9) NNET_Eng(const double *, const int *, const double *, int)
  -> (1517,5) errmsg(const char *, const char *, const char *, int)
  -> INLINE: (1542,3) sfree(void *)
  -> INLINE: (1543,3) sfree(void *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at compute.cpp(1485,3)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at compute.cpp(1485,3)
   <Peeled>
   LOOP END

   LOOP BEGIN at compute.cpp(1485,3)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at compute.cpp(1485,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at nrvector.h(68,5) inlined into compute.cpp(1494,35)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at nrvector.h(68,5) inlined into compute.cpp(1494,35)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at nrvector.h(68,5) inlined into compute.cpp(1494,35)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at NNetInterface.cpp(69,7) inlined into compute.cpp(1498,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at NNetInterface.cpp(74,5) inlined into compute.cpp(1498,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at NNetInterface.cpp(493,3) inlined into compute.cpp(1503,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between local_Gi line 495 and layer line 495

   LOOP BEGIN at NNetInterface.cpp(495,5) inlined into compute.cpp(1503,9)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at NNetInterface.cpp(495,5) inlined into compute.cpp(1503,9)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at NNetInterface.cpp(495,5) inlined into compute.cpp(1503,9)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at NNetInterface.cpp(69,7) inlined into compute.cpp(1507,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at NNetInterface.cpp(74,5) inlined into compute.cpp(1507,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END


Non-optimizable loops:


LOOP BEGIN at NNetInterface.cpp(66,3) inlined into compute.cpp(1498,5)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at NNetInterface.cpp(68,5) inlined into compute.cpp(1498,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END

LOOP BEGIN at NNetInterface.cpp(66,3) inlined into compute.cpp(1507,5)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at NNetInterface.cpp(68,5) inlined into compute.cpp(1507,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

compute.cpp(1485,28):remark #34026: call to memset implemented as a call to optimized library version
nrvector.h(68,30):remark #34026: call to memcpy implemented as a call to optimized library version
NNetInterface.cpp(495,32):remark #34026: call to memcpy implemented as a call to optimized library version
===========================================================================

Begin optimization report for: One_NeighborList(const double (*)[3], double **, int, int *&, double *&)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (One_NeighborList(const double (*)[3], double **, int, int *&, double *&)) [4] compute.cpp(1183,1)
  -> INLINE: (1200,15) grow<double>(double *&, int, const char *)
    -> INLINE: mem.h:(27,29) create<double>(double *&, int, const char *)
      -> INLINE: (16,17) smalloc(int, const char *)
    -> INLINE: mem.h:(30,17) srealloc(void *, int, const char *)
  -> INLINE: (1236,15) grow<double>(double *&, int, const char *)
    -> INLINE: mem.h:(27,29) create<double>(double *&, int, const char *)
      -> INLINE: (16,17) smalloc(int, const char *)
    -> INLINE: mem.h:(30,17) srealloc(void *, int, const char *)
  -> (1250,5) errmsg(const char *, const char *, const char *, int)
  -> INLINE: (1259,15) grow<double>(double *&, int, const char *)
    -> INLINE: mem.h:(27,29) create<double>(double *&, int, const char *)
      -> INLINE: (16,17) smalloc(int, const char *)
    -> INLINE: mem.h:(30,17) srealloc(void *, int, const char *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at compute.cpp(1203,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at compute.cpp(1203,3)
<Remainder>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at compute.cpp(1213,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at compute.cpp(1214,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at compute.cpp(1215,7)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between lvec line 1217 and neighbors line 1236

         LOOP BEGIN at compute.cpp(1216,2)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between lvec line 1217 and neighbors line 1236

            LOOP BEGIN at compute.cpp(1220,4)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
               remark #15346: vector dependence: assumed ANTI dependence between bases line 1221 and neighbors line 1236
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at compute.cpp(1245,3)
<Peeled>
LOOP END

LOOP BEGIN at compute.cpp(1245,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at compute.cpp(1245,3)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: NRvector<double>::~NRvector(NRvector<double> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (NRvector<double>::~NRvector(NRvector<double> *)) [5] nrvector.h(177,1)

===========================================================================

Begin optimization report for: Atomic_Eng(const int *, const double *, int, const VecDoub *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Atomic_Eng(const int *, const double *, int, const VecDoub *)) [6] compute.cpp(291,1)
  -> INLINE: (327,32) CutoffFunc(double, double, double)
  -> INLINE: (328,13) CutoffFunc(double, double, double)
  -> INLINE: (328,32) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (329,31) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (349,37) CutoffFunc(double, double, double)
  -> INLINE: (350,18) CutoffFunc(double, double, double)
  -> INLINE: (350,39) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (351,31) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (351,56) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (360,35) CutoffFunc(double, double, double)
  -> INLINE: (361,16) CutoffFunc(double, double, double)
  -> INLINE: (361,37) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (362,19) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (363,23) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (364,19) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (365,22) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (369,19) NRvector<double>::operator[](const NRvector<double> *, int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at compute.cpp(301,3)
<Peeled>
LOOP END

LOOP BEGIN at compute.cpp(301,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at compute.cpp(301,3)
<Remainder>
LOOP END

LOOP BEGIN at compute.cpp(309,3)
<Peeled>
LOOP END

LOOP BEGIN at compute.cpp(309,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at compute.cpp(309,3)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at compute.cpp(309,3)
<Remainder>
LOOP END

LOOP BEGIN at compute.cpp(318,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at compute.cpp(341,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at compute.cpp(356,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at compute.cpp(315,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

LOOP BEGIN at compute.cpp(338,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: iCompute_LSP(const int *, const double *, int, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (iCompute_LSP(const int *, const double *, int, double *)) [10] compute.cpp(1051,1)
  -> INLINE: (1093,54) CutoffFunc(double, double, double)
  -> INLINE: (1094,76) CutoffFunc(double, double, double)
  -> INLINE: (1095,62) CutoffFunc(double, double, double)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at compute.cpp(1074,3)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at compute.cpp(1074,3)
   <Peeled>
   LOOP END

   LOOP BEGIN at compute.cpp(1074,3)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at compute.cpp(1074,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at compute.cpp(1078,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at compute.cpp(1080,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at compute.cpp(1083,9)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at compute.cpp(1097,11)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between Pl line 1098 and Pl line 1098
         LOOP END

         LOOP BEGIN at compute.cpp(1099,11)
         <Multiversioned v1>
            remark #25235: Loop multiversioned to eliminate assumed dependencies
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between gi line 1100 and gi line 1100
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at compute.cpp(1099,11)
         <Remainder, Multiversioned v1>
         LOOP END

         LOOP BEGIN at compute.cpp(1099,11)
         <Multiversioned v2>
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at compute.cpp(1099,11)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at compute.cpp(1113,9)
   <Multiversioned v1>
      remark #25235: Loop multiversioned to eliminate assumed dependencies
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between gi line 1114 and gi line 1114
   LOOP END

   LOOP BEGIN at compute.cpp(1113,9)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at compute.cpp(1113,9)
   <Remainder, Multiversioned v2>
   LOOP END

   LOOP BEGIN at compute.cpp(1121,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between gi line 1122 and gi line 1122
   LOOP END

   LOOP BEGIN at compute.cpp(1128,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between gi line 1129 and gi line 1129
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at compute.cpp(1076,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

    Report from: Code generation optimizations [cg]

compute.cpp(1074,28):remark #34026: call to memset implemented as a call to optimized library version
===========================================================================

Begin optimization report for: Area(const VecDoub *, const VecDoub *, VecDoub &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Area(const VecDoub *, const VecDoub *, VecDoub &)) [11] compute.cpp(1154,1)
  -> INLINE: (1161,9) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (1161,16) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (1161,23) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (1161,30) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (1162,11) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (1162,18) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (1162,25) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (1162,32) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (1163,9) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (1163,16) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (1163,23) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (1163,30) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (1165,11) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (1166,8) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (1167,8) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (1168,8) NRvector<double>::operator[](NRvector<double> *, int)

===========================================================================

Begin optimization report for: crystalFunk(double)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (crystalFunk(double)) [12] compute.cpp(1549,1)
  -> (1552,3) set_struc(const char *, double, int &)
  -> (1554,10) crystal_eng(const double (*)[3], double **, int)

===========================================================================

Begin optimization report for: ComputeLocalStrucParam(Struc_Data *&, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (ComputeLocalStrucParam(Struc_Data *&, int)) [16] compute.cpp(639,1)
  -> INLINE: (657,23) create<double>(double *&, int, const char *)
    -> INLINE: mem.h:(16,17) smalloc(int, const char *)
  -> INLINE: (677,44) CutoffFunc(double, double, double)
  -> INLINE: (678,45) CutoffFunc(double, double, double)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at compute.cpp(659,5)
   remark #25408: memset generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at compute.cpp(659,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between data line 659 and data line 659
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at compute.cpp(659,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at compute.cpp(662,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at compute.cpp(664,2)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at compute.cpp(667,4)
         remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 1

         LOOP BEGIN at compute.cpp(680,6)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between Pl line 680 and Pl line 680
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at compute.cpp(654,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at compute.cpp(660,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

compute.cpp(659,30):remark #34026: call to memset implemented as a call to optimized library version
===========================================================================

Begin optimization report for: DFP_minimize()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (DFP_minimize()) [17] compute.cpp(378,1)
  -> (403,7) dfpmin(VecDoub &, double, int &, double &, double (&)(VecDoub &))
  -> INLINE: (404,31) WriteHBparam()
  -> INLINE: (411,19) compareAbsMaxVec(const VecDoub &, double, double &)
    -> INLINE: util.cpp:(65,9) NRvector<double>::size(const NRvector<double> *) const
    -> INLINE: util.cpp:(70,23) NRvector<double>::size(const NRvector<double> *) const
    -> INLINE: util.cpp:(70,23) NRvector<double>::size(const NRvector<double> *) const
    -> INLINE: util.cpp:(71,17) NRvector<double>::operator[](const NRvector<double> *, int) const
    -> INLINE: util.cpp:(73,15) NRvector<double>::operator[](const NRvector<double> *, int) const
    -> INLINE: util.cpp:(73,32) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> (413,20) compute_error(Struc_Data *&, int, VecDoub &)
  -> (426,9) WriteBOPParam(FILE *)
  -> (434,9) WriteNNetParam(FILE *)
  -> (440,9) WriteHiddenLayerParam(FILE *)
  -> INLINE: (447,11) WriteLastLayerOutputs(FILE *)
    -> write.cpp:(838,5) evaluate_nnet()
  -> (457,9) Funk(VecDoub &)
  -> (461,35) compute_error(Struc_Data *&, int, VecDoub &)
  -> INLINE: (467,17) compareAbsMaxVec(const VecDoub &, double, double &)
    -> INLINE: util.cpp:(65,9) NRvector<double>::size(const NRvector<double> *) const
    -> INLINE: util.cpp:(70,23) NRvector<double>::size(const NRvector<double> *) const
    -> INLINE: util.cpp:(70,23) NRvector<double>::size(const NRvector<double> *) const
    -> INLINE: util.cpp:(71,17) NRvector<double>::operator[](const NRvector<double> *, int) const
    -> INLINE: util.cpp:(73,15) NRvector<double>::operator[](const NRvector<double> *, int) const
    -> INLINE: util.cpp:(73,32) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> (476,9) WriteHiddenLayerParam(FILE *)
  -> INLINE: (480,9) WriteLastLayerOutputs(FILE *)
    -> write.cpp:(838,5) evaluate_nnet()
  -> INLINE: (486,5) mpi_send_dummy()
  -> (488,5) mpi_exchange_slaves_nnet()


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at write.cpp(851,5) inlined into compute.cpp(404,31)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

   LOOP BEGIN at write.cpp(852,7) inlined into compute.cpp(404,31)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1

      LOOP BEGIN at write.cpp(853,2) inlined into compute.cpp(404,31)
         remark #15527: loop was not vectorized: function call to fprintf(FILE *, const char *, ...) cannot be vectorized   [ write.cpp(854,4) ]
         remark #25436: completely unrolled by 8  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at util.cpp(70,23) inlined into compute.cpp(411,19)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at write.cpp(833,3) inlined into compute.cpp(447,11)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

   LOOP BEGIN at write.cpp(836,5) inlined into compute.cpp(447,11)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at write.cpp(836,5) inlined into compute.cpp(447,11)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at write.cpp(836,5) inlined into compute.cpp(447,11)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END

   LOOP BEGIN at write.cpp(839,5) inlined into compute.cpp(447,11)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at util.cpp(70,23) inlined into compute.cpp(467,17)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at write.cpp(833,3) inlined into compute.cpp(480,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

   LOOP BEGIN at write.cpp(836,5) inlined into compute.cpp(480,9)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at write.cpp(836,5) inlined into compute.cpp(480,9)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at write.cpp(836,5) inlined into compute.cpp(480,9)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END

   LOOP BEGIN at write.cpp(839,5) inlined into compute.cpp(480,9)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at mpi_stuff.cpp(12,3) inlined into compute.cpp(486,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END


Non-optimizable loops:


LOOP BEGIN at compute.cpp(396,5)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

    Report from: Code generation optimizations [cg]

write.cpp(836,32):remark #34026: call to memcpy implemented as a call to optimized library version
write.cpp(836,32):remark #34026: call to memcpy implemented as a call to optimized library version
===========================================================================

Begin optimization report for: iEnergy(int, const double *, const VecDoub &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (iEnergy(int, const double *, const VecDoub &)) [18] compute.cpp(112,1)
  -> INLINE: (124,10) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> INLINE: (125,8) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> INLINE: (151,32) CutoffFunc(double, double, double)
  -> INLINE: (152,13) CutoffFunc(double, double, double)
  -> INLINE: (152,34) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (153,39) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (178,37) CutoffFunc(double, double, double)
  -> INLINE: (179,18) CutoffFunc(double, double, double)
  -> INLINE: (179,41) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (180,33) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (180,66) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (181,57) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (184,13) CutoffFunc(double, double, double)
  -> INLINE: (185,36) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (185,49) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (185,102) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (186,68) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (187,36) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (187,49) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (197,35) CutoffFunc(double, double, double)
  -> INLINE: (198,16) CutoffFunc(double, double, double)
  -> INLINE: (198,37) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (199,19) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (200,23) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (201,19) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (202,22) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (208,11) NRmatrix<Doub>::operator[](NRmatrix<Doub> *, int)
  -> INLINE: (209,11) NRmatrix<Doub>::operator[](NRmatrix<Doub> *, int)
  -> INLINE: (210,11) NRmatrix<Doub>::operator[](NRmatrix<Doub> *, int)
  -> INLINE: (211,11) NRmatrix<Doub>::operator[](NRmatrix<Doub> *, int)
  -> INLINE: (216,20) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (219,9) NRmatrix<Doub>::operator[](NRmatrix<Doub> *, int)
  -> INLINE: (220,9) NRmatrix<Doub>::operator[](NRmatrix<Doub> *, int)
  -> INLINE: (220,52) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (221,9) NRmatrix<Doub>::operator[](NRmatrix<Doub> *, int)
  -> INLINE: (221,39) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (221,70) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (241,34) CutoffFunc(double, double, double)
  -> INLINE: (242,15) CutoffFunc(double, double, double)
  -> INLINE: (242,34) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (243,25) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (244,20) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (257,38) CutoffFunc(double, double, double)
  -> INLINE: (258,19) CutoffFunc(double, double, double)
  -> INLINE: (258,38) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (259,29) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (260,17) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (263,34) CutoffFunc(double, double, double)
  -> INLINE: (264,15) CutoffFunc(double, double, double)
  -> INLINE: (264,36) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (265,27) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (268,37) CutoffFunc(double, double, double)
  -> INLINE: (269,18) CutoffFunc(double, double, double)
  -> INLINE: (269,39) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (270,43) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (270,56) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (271,30) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (272,34) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (272,65) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (272,76) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (274,30) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (274,47) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (277,9) NRmatrix<Doub>::operator[](NRmatrix<Doub> *, int)
  -> INLINE: (283,3) destroy<double>(double **)
    -> INLINE: mem.h:(85,5) sfree(void *)
    -> INLINE: mem.h:(86,5) sfree(void *)
  -> INLINE: (284,3) destroy<double>(double **)
    -> INLINE: mem.h:(85,5) sfree(void *)
    -> INLINE: mem.h:(86,5) sfree(void *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at mem.h(47,5) inlined into compute.cpp(124,10)
<Peeled>
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into compute.cpp(124,10)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into compute.cpp(124,10)
<Remainder>
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into compute.cpp(125,8)
<Peeled>
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into compute.cpp(125,8)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into compute.cpp(125,8)
<Remainder>
LOOP END

LOOP BEGIN at compute.cpp(128,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between Sij line 129 and cs line 134

   LOOP BEGIN at compute.cpp(132,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between Sijk line 133 and cs line 134
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at compute.cpp(132,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at compute.cpp(142,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at compute.cpp(170,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at compute.cpp(193,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at compute.cpp(248,4)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at compute.cpp(139,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

LOOP BEGIN at compute.cpp(166,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

LOOP BEGIN at compute.cpp(227,5)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at compute.cpp(232,7)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END

Fusion of IFs performed in _Z7iEnergyiPKdRK8NRvectorIdE at line 105
===========================================================================

Begin optimization report for: GeneticAlgo(VecDoub &, const VecDoub &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GeneticAlgo(VecDoub &, const VecDoub &)) [19] ga.cpp(20,1)
  -> INLINE: (47,9) create<double>(double *&, int, const char *)
    -> INLINE: mem.h:(16,17) smalloc(int, const char *)
  -> INLINE: (48,18) create<double>(double *&, int, const char *)
    -> INLINE: mem.h:(16,17) smalloc(int, const char *)
  -> INLINE: (49,15) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> INLINE: (50,11) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> INLINE: (60,15) Ranq1::Ranq1(Ranq1 *, Ullong)
    -> INLINE: ran.h:(28,9) Ranq1::int64(Ranq1 *)
  -> INLINE: (68,25) Ranq1::doub(Ranq1 *)
    -> INLINE: ran.h:(34,57) Ranq1::int64(Ranq1 *)
  -> INLINE: (70,17) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (70,25) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (70,34) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (73,46) Ranq1::doub(Ranq1 *)
    -> INLINE: ran.h:(34,57) Ranq1::int64(Ranq1 *)
  -> INLINE: (74,24) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (76,27) Ranq1::doub(Ranq1 *)
    -> INLINE: ran.h:(34,57) Ranq1::int64(Ranq1 *)
  -> INLINE: (78,19) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (78,27) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (78,36) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (90,35) NRvector<double>::operator[](NRvector<double> *, int)
  -> (91,14) Funk(VecDoub &)
  -> (99,5) NewSort(double *, double **, int, int, int)
  -> INLINE: (127,11) grow<double>(double *&, int, const char *)
    -> INLINE: mem.h:(27,29) create<double>(double *&, int, const char *)
      -> INLINE: (16,17) smalloc(int, const char *)
    -> INLINE: mem.h:(30,17) srealloc(void *, int, const char *)
  -> INLINE: (128,17) grow<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(62,31) create<double>(double **&, int, int, const char *)
      -> INLINE: (42,27) smalloc(int, const char *)
      -> INLINE: (44,23) smalloc(int, const char *)
    -> INLINE: mem.h:(65,27) srealloc(void *, int, const char *)
    -> INLINE: mem.h:(67,23) srealloc(void *, int, const char *)
  -> INLINE: (149,30) Ranq1::doub(Ranq1 *)
    -> INLINE: ran.h:(34,57) Ranq1::int64(Ranq1 *)
  -> INLINE: (152,32) Ranq1::doub(Ranq1 *)
    -> INLINE: ran.h:(34,57) Ranq1::int64(Ranq1 *)
  -> INLINE: (158,33) Ranq1::doub(Ranq1 *)
    -> INLINE: ran.h:(34,57) Ranq1::int64(Ranq1 *)
  -> INLINE: (169,34) Ranq1::doub(Ranq1 *)
    -> INLINE: ran.h:(34,57) Ranq1::int64(Ranq1 *)
  -> INLINE: (183,33) Ranq1::doub(Ranq1 *)
    -> INLINE: ran.h:(34,57) Ranq1::int64(Ranq1 *)
  -> INLINE: (191,33) Ranq1::doub(Ranq1 *)
    -> INLINE: ran.h:(34,57) Ranq1::int64(Ranq1 *)
  -> INLINE: (197,37) Ranq1::doub(Ranq1 *)
    -> INLINE: ran.h:(34,57) Ranq1::int64(Ranq1 *)
  -> INLINE: (197,37) Ranq1::doub(Ranq1 *)
    -> INLINE: ran.h:(34,57) Ranq1::int64(Ranq1 *)
  -> INLINE: (198,41) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (200,29) Ranq1::doub(Ranq1 *)
    -> INLINE: ran.h:(34,57) Ranq1::int64(Ranq1 *)
  -> INLINE: (205,29) Ranq1::doub(Ranq1 *)
    -> INLINE: ran.h:(34,57) Ranq1::int64(Ranq1 *)
  -> INLINE: (220,30) NRvector<double>::operator[](NRvector<double> *, int)
  -> (224,8) Funk(VecDoub &)
  -> INLINE: (229,10) grow<double>(double *&, int, const char *)
    -> INLINE: mem.h:(27,29) create<double>(double *&, int, const char *)
      -> INLINE: (16,17) smalloc(int, const char *)
    -> INLINE: mem.h:(30,17) srealloc(void *, int, const char *)
  -> INLINE: (230,16) grow<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(62,31) create<double>(double **&, int, int, const char *)
      -> INLINE: (42,27) smalloc(int, const char *)
      -> INLINE: (44,23) smalloc(int, const char *)
    -> INLINE: mem.h:(65,27) srealloc(void *, int, const char *)
    -> INLINE: mem.h:(67,23) srealloc(void *, int, const char *)
  -> INLINE: (239,11) grow<double>(double *&, int, const char *)
    -> INLINE: mem.h:(27,29) create<double>(double *&, int, const char *)
      -> INLINE: (16,17) smalloc(int, const char *)
    -> INLINE: mem.h:(30,17) srealloc(void *, int, const char *)
  -> INLINE: (240,17) grow<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(62,31) create<double>(double **&, int, int, const char *)
      -> INLINE: (42,27) smalloc(int, const char *)
      -> INLINE: (44,23) smalloc(int, const char *)
    -> INLINE: mem.h:(65,27) srealloc(void *, int, const char *)
    -> INLINE: mem.h:(67,23) srealloc(void *, int, const char *)
  -> (252,7) NewSort(double *, double **, int, int, int)
  -> INLINE: (277,35) NRvector<double>::operator[](NRvector<double> *, int)
  -> (279,31) WriteBOPParam(FILE *)
  -> (280,53) WriteNNetParam(FILE *)
  -> INLINE: (285,33) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (294,5) sfree(void *)
  -> INLINE: (295,5) sfree(void *)
  -> INLINE: (297,5) destroy<double>(double **)
    -> INLINE: mem.h:(85,5) sfree(void *)
    -> INLINE: mem.h:(86,5) sfree(void *)
  -> INLINE: (298,5) destroy<double>(double **)
    -> INLINE: mem.h:(85,5) sfree(void *)
    -> INLINE: mem.h:(86,5) sfree(void *)
  -> (306,18) Funk(VecDoub &)
  -> INLINE: (308,5) mpi_send_dummy()
  -> (312,5) mpi_exchange_slaves_nnet()


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at mem.h(47,5) inlined into ga.cpp(49,15)
<Peeled>
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into ga.cpp(49,15)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into ga.cpp(49,15)
<Remainder>
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into ga.cpp(50,11)
<Peeled>
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into ga.cpp(50,11)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into ga.cpp(50,11)
<Remainder>
LOOP END

LOOP BEGIN at ga.cpp(65,7)
   remark #25261: Invariant Condition eliminated(Proven True) at line 98
   remark #25261: Invariant Condition eliminated(Proven True) at line 105
   remark #25261: Invariant Condition eliminated(Proven True) at line 98
   remark #25261: Invariant Condition eliminated(Proven True) at line 98
   remark #25261: Invariant Condition eliminated(Proven True) at line 98
   remark #25261: Invariant Condition eliminated(Proven True) at line 105
   remark #25261: Invariant Condition eliminated(Proven True) at line 98
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ga.cpp(90,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ga.cpp(103,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between pop line 104 and fittest line 104

   LOOP BEGIN at ga.cpp(104,7)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at ga.cpp(104,7)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at ga.cpp(104,7)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into ga.cpp(128,17)
<Peeled>
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into ga.cpp(128,17)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into ga.cpp(128,17)
<Remainder>
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into ga.cpp(128,17)
<Peeled>
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into ga.cpp(128,17)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into ga.cpp(128,17)
<Remainder>
LOOP END

LOOP BEGIN at ga.cpp(149,2)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ga.cpp(157,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between pop line 159 and pop line 159
LOOP END

LOOP BEGIN at ga.cpp(163,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between pop line 164 and pop line 164
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ga.cpp(163,4)
<Remainder>
LOOP END

LOOP BEGIN at ga.cpp(154,2)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ga.cpp(171,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between fittest line 172 and pop line 178
LOOP END

LOOP BEGIN at ga.cpp(182,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between pop line 184 and pop line 184
LOOP END

LOOP BEGIN at ga.cpp(193,4)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ga.cpp(193,4)
   <Peeled>
   LOOP END

   LOOP BEGIN at ga.cpp(193,4)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at ga.cpp(193,4)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at nrvector.h(105,11) inlined into ga.cpp(198,41)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ga.cpp(204,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between pop line 206 and pop line 206
LOOP END

LOOP BEGIN at ga.cpp(220,2)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into ga.cpp(230,16)
<Peeled>
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into ga.cpp(230,16)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into ga.cpp(230,16)
<Remainder>
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into ga.cpp(230,16)
<Peeled>
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into ga.cpp(230,16)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into ga.cpp(230,16)
<Remainder>
LOOP END

LOOP BEGIN at ga.cpp(233,4)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at ga.cpp(233,4)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at ga.cpp(233,4)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into ga.cpp(240,17)
<Peeled>
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into ga.cpp(240,17)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into ga.cpp(240,17)
<Remainder>
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into ga.cpp(240,17)
<Peeled>
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into ga.cpp(240,17)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into ga.cpp(240,17)
<Remainder>
LOOP END

LOOP BEGIN at ga.cpp(265,7)
<Peeled, Multiversioned v1>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 3
LOOP END

LOOP BEGIN at ga.cpp(265,7)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ga.cpp(265,7)
<Remainder, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 3
LOOP END

LOOP BEGIN at ga.cpp(265,7)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at ga.cpp(265,7)
<Multiversioned v2, Distributed chunk1>
   remark #25426: Loop Distributed (2 way) 
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ga.cpp(265,7)
<Peeled, Multiversioned v2, Distributed chunk2>
LOOP END

LOOP BEGIN at ga.cpp(265,7)
<Multiversioned v2, Distributed chunk2>
   remark #15301: PARTIAL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ga.cpp(265,7)
<Remainder, Multiversioned v2, Distributed chunk2>
LOOP END

LOOP BEGIN at ga.cpp(277,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ga.cpp(285,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at mpi_stuff.cpp(12,3) inlined into ga.cpp(308,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END


Non-optimizable loops:


LOOP BEGIN at ga.cpp(63,5)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

LOOP BEGIN at ga.cpp(89,5)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

LOOP BEGIN at ga.cpp(124,5)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at ga.cpp(148,7)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at ga.cpp(194,4)
         remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
      LOOP END
   LOOP END

   LOOP BEGIN at ga.cpp(219,7)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

ga.cpp(104,34):remark #34026: call to memcpy implemented as a call to optimized library version
ga.cpp(193,31):remark #34026: call to memset implemented as a call to optimized library version
ga.cpp(233,31):remark #34026: call to memcpy implemented as a call to optimized library version
===========================================================================

Begin optimization report for: Funk(VecDoub &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Funk(VecDoub &)) [20] compute.cpp(493,1)
  -> (508,5) mpi_exchange_master_nnet(VecDoub &)
  -> INLINE: (513,45) compute_hb_constraint2()
  -> (556,22) specific_bop_constraint(VecDoub &)
  -> INLINE: (557,22) mean_sqr(const VecDoub &, double)
    -> INLINE: (1354,21) NRvector<double>::size(const NRvector<double> *) const
    -> INLINE: (1354,21) NRvector<double>::size(const NRvector<double> *) const
    -> INLINE: (1354,42) NRvector<double>::operator[](const NRvector<double> *, int) const
    -> INLINE: (1354,47) NRvector<double>::operator[](const NRvector<double> *, int) const
    -> INLINE: (1355,18) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (561,20) mean_sqr(const VecDoub &, double)
    -> INLINE: (1354,21) NRvector<double>::size(const NRvector<double> *) const
    -> INLINE: (1354,21) NRvector<double>::size(const NRvector<double> *) const
    -> INLINE: (1354,42) NRvector<double>::operator[](const NRvector<double> *, int) const
    -> INLINE: (1354,47) NRvector<double>::operator[](const NRvector<double> *, int) const
    -> INLINE: (1355,18) NRvector<double>::size(const NRvector<double> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at compute.cpp(509,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at compute.cpp(509,5)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at compute.cpp(509,5)
<Remainder>
LOOP END

LOOP BEGIN at compute.cpp(1374,7) inlined into compute.cpp(513,45)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

   LOOP BEGIN at compute.cpp(1375,9) inlined into compute.cpp(513,45)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1

      LOOP BEGIN at compute.cpp(1376,11) inlined into compute.cpp(513,45)
         remark #15527: loop was not vectorized: function call to fprintf(FILE *, const char *, ...) cannot be vectorized   [ compute.cpp(1378,13) ]
         remark #25436: completely unrolled by 8  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at compute.cpp(1388,7) inlined into compute.cpp(513,45)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at compute.cpp(1390,7) inlined into compute.cpp(513,45)
   remark #25408: memset generated
   remark #25408: memset generated
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at compute.cpp(1391,7) inlined into compute.cpp(513,45)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at compute.cpp(1392,9) inlined into compute.cpp(513,45)
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25439: unrolled with remainder by 2  

      LOOP BEGIN at compute.cpp(1393,11) inlined into compute.cpp(513,45)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END
   LOOP END

   LOOP BEGIN at compute.cpp(1392,9) inlined into compute.cpp(513,45)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at compute.cpp(1400,7) inlined into compute.cpp(513,45)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at compute.cpp(1405,5) inlined into compute.cpp(513,45)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at compute.cpp(1406,7) inlined into compute.cpp(513,45)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at compute.cpp(1407,9) inlined into compute.cpp(513,45)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at compute.cpp(1354,21) inlined into compute.cpp(557,22)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at compute.cpp(1354,21) inlined into compute.cpp(561,20)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END
===========================================================================

Begin optimization report for: specific_bop_constraint(VecDoub &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (specific_bop_constraint(VecDoub &)) [21] compute.cpp(1558,1)
  -> INLINE: (1560,17) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (1560,33) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (1561,17) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (1561,33) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (1562,17) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (1562,33) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (1563,17) NRvector<double>::operator[](NRvector<double> *, int)
  -> INLINE: (1563,32) NRvector<double>::operator[](NRvector<double> *, int)

===========================================================================

Begin optimization report for: surf100()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (surf100()) [22] surfaces.cpp(10,1)
  -> INLINE: (26,34) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> INLINE: (27,19) grow<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(62,31) create<double>(double **&, int, int, const char *)
      -> INLINE: (42,27) smalloc(int, const char *)
      -> INLINE: (44,23) smalloc(int, const char *)
    -> INLINE: mem.h:(65,27) srealloc(void *, int, const char *)
    -> INLINE: mem.h:(67,23) srealloc(void *, int, const char *)
  -> INLINE: (74,34) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> INLINE: (75,19) grow<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(62,31) create<double>(double **&, int, int, const char *)
      -> INLINE: (42,27) smalloc(int, const char *)
      -> INLINE: (44,23) smalloc(int, const char *)
    -> INLINE: mem.h:(65,27) srealloc(void *, int, const char *)
    -> INLINE: mem.h:(67,23) srealloc(void *, int, const char *)
  -> INLINE: (124,34) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> INLINE: (125,19) grow<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(62,31) create<double>(double **&, int, int, const char *)
      -> INLINE: (42,27) smalloc(int, const char *)
      -> INLINE: (44,23) smalloc(int, const char *)
    -> INLINE: mem.h:(65,27) srealloc(void *, int, const char *)
    -> INLINE: mem.h:(67,23) srealloc(void *, int, const char *)
  -> (191,9) crystal_eng(const double (*)[3], double **, int)
  -> INLINE: (194,5) WriteConfigs(const char *, const char *, double (*)[3], double **, int)
  -> (199,5) errmsg(const char *, const char *, const char *, int)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(26,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 6  
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into surfaces.cpp(27,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 71 and basis0 line 71
   remark #25436: completely unrolled by 6  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(27,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 6  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(74,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 6  
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into surfaces.cpp(75,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 71 and basis0 line 71
   remark #25436: completely unrolled by 6  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(75,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 6  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(124,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 12  
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into surfaces.cpp(125,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 71 and basis0 line 71
   remark #25436: completely unrolled by 12  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(125,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 12  
LOOP END

LOOP BEGIN at write.cpp(775,3) inlined into surfaces.cpp(194,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between element line 776 and basis line 776
LOOP END
===========================================================================

Begin optimization report for: surf110()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (surf110()) [23] surfaces.cpp(207,1)
  -> INLINE: (223,34) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> INLINE: (224,19) grow<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(62,31) create<double>(double **&, int, int, const char *)
      -> INLINE: (42,27) smalloc(int, const char *)
      -> INLINE: (44,23) smalloc(int, const char *)
    -> INLINE: mem.h:(65,27) srealloc(void *, int, const char *)
    -> INLINE: mem.h:(67,23) srealloc(void *, int, const char *)
  -> INLINE: (281,34) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> INLINE: (282,19) grow<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(62,31) create<double>(double **&, int, int, const char *)
      -> INLINE: (42,27) smalloc(int, const char *)
      -> INLINE: (44,23) smalloc(int, const char *)
    -> INLINE: mem.h:(65,27) srealloc(void *, int, const char *)
    -> INLINE: mem.h:(67,23) srealloc(void *, int, const char *)
  -> INLINE: (470,34) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> INLINE: (471,19) grow<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(62,31) create<double>(double **&, int, int, const char *)
      -> INLINE: (42,27) smalloc(int, const char *)
      -> INLINE: (44,23) smalloc(int, const char *)
    -> INLINE: mem.h:(65,27) srealloc(void *, int, const char *)
    -> INLINE: mem.h:(67,23) srealloc(void *, int, const char *)
  -> (511,9) crystal_eng(const double (*)[3], double **, int)
  -> INLINE: (514,5) WriteConfigs(const char *, const char *, double (*)[3], double **, int)
  -> (519,5) errmsg(const char *, const char *, const char *, int)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(223,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 8  
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into surfaces.cpp(224,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 71 and basis0 line 71
   remark #25436: completely unrolled by 8  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(224,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 8  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(281,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25438: unrolled without remainder by 2  
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into surfaces.cpp(282,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 71 and basis0 line 71
   remark #25438: unrolled without remainder by 2  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(282,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25438: unrolled without remainder by 2  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(470,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 6  
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into surfaces.cpp(471,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 71 and basis0 line 71
   remark #25436: completely unrolled by 6  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(471,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 6  
LOOP END

LOOP BEGIN at write.cpp(775,3) inlined into surfaces.cpp(514,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between element line 776 and basis line 776
LOOP END
===========================================================================

Begin optimization report for: surf111()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (surf111()) [24] surfaces.cpp(527,1)
  -> INLINE: (545,34) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> INLINE: (546,19) grow<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(62,31) create<double>(double **&, int, int, const char *)
      -> INLINE: (42,27) smalloc(int, const char *)
      -> INLINE: (44,23) smalloc(int, const char *)
    -> INLINE: mem.h:(65,27) srealloc(void *, int, const char *)
    -> INLINE: mem.h:(67,23) srealloc(void *, int, const char *)
  -> INLINE: (608,34) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> INLINE: (609,19) grow<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(62,31) create<double>(double **&, int, int, const char *)
      -> INLINE: (42,27) smalloc(int, const char *)
      -> INLINE: (44,23) smalloc(int, const char *)
    -> INLINE: mem.h:(65,27) srealloc(void *, int, const char *)
    -> INLINE: mem.h:(67,23) srealloc(void *, int, const char *)
  -> INLINE: (785,34) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> INLINE: (786,19) grow<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(62,31) create<double>(double **&, int, int, const char *)
      -> INLINE: (42,27) smalloc(int, const char *)
      -> INLINE: (44,23) smalloc(int, const char *)
    -> INLINE: mem.h:(65,27) srealloc(void *, int, const char *)
    -> INLINE: mem.h:(67,23) srealloc(void *, int, const char *)
  -> (838,9) crystal_eng(const double (*)[3], double **, int)
  -> INLINE: (841,5) WriteConfigs(const char *, const char *, double (*)[3], double **, int)
  -> (846,5) errmsg(const char *, const char *, const char *, int)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(545,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 9  
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into surfaces.cpp(546,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 71 and basis0 line 71
   remark #25436: completely unrolled by 9  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(546,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 9  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(608,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 16  
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into surfaces.cpp(609,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 71 and basis0 line 71
   remark #25436: completely unrolled by 16  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(609,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 16  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(785,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 9  
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into surfaces.cpp(786,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 71 and basis0 line 71
   remark #25436: completely unrolled by 9  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(786,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 9  
LOOP END

LOOP BEGIN at write.cpp(775,3) inlined into surfaces.cpp(841,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between element line 776 and basis line 776
LOOP END
===========================================================================

Begin optimization report for: BulkModulus()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (BulkModulus()) [25] elastic.cpp(9,1)
  -> (21,3) set_struc(const char *, double, int &)
  -> INLINE: (22,11) VolumePerAtom(const double (*)[3], int)
  -> INLINE: (23,11) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> (25,3) InitStrain(double (*)[3])
  -> INLINE: (39,5) TransformVector(double (*)[3], double (*)[3], double (*)[3])
  -> INLINE: (42,5) TransformBasis(double **, double (*)[3], double **, int)
  -> (46,9) crystal_eng(const double (*)[3], double **, int)
  -> INLINE: (52,3) destroy<double>(double **)
    -> INLINE: mem.h:(85,5) sfree(void *)
    -> INLINE: mem.h:(86,5) sfree(void *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(23,11)
<Peeled>
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(23,11)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(23,11)
<Remainder>
LOOP END

LOOP BEGIN at elastic.cpp(29,3)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

   LOOP BEGIN at elastic.cpp(453,3) inlined into elastic.cpp(42,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between basis line 455 and basis line 456

      LOOP BEGIN at elastic.cpp(454,5) inlined into elastic.cpp(42,5)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between basis line 455 and basis line 456
         remark #25436: completely unrolled by 3  

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(42,5)
            remark #25085: Preprocess Loopnests: Moving Out Load and Store    [ elastic.cpp(456,31) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #25436: completely unrolled by 3  
         LOOP END

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(42,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(42,5)
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at elastic.cpp(440,3) inlined into elastic.cpp(39,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ elastic.cpp(443,7) ]
      remark #25436: completely unrolled by 3  

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(39,5)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ elastic.cpp(443,7) ]
         remark #25436: completely unrolled by 3  

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(39,5)
            remark #25085: Preprocess Loopnests: Moving Out Load and Store    [ elastic.cpp(443,31) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #25436: completely unrolled by 3  
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(39,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(39,5)
         LOOP END
      LOOP END

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(39,5)

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(39,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(39,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(39,5)
         LOOP END
      LOOP END

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(39,5)

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(39,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(39,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(39,5)
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: c11()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (c11()) [26] elastic.cpp(59,1)
  -> (68,3) set_struc(const char *, double, int &)
  -> INLINE: (69,11) VolumePerAtom(const double (*)[3], int)
  -> INLINE: (70,11) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> (73,3) InitStrain(double (*)[3])
  -> INLINE: (84,5) TransformVector(double (*)[3], double (*)[3], double (*)[3])
  -> INLINE: (87,5) TransformBasis(double **, double (*)[3], double **, int)
  -> (90,9) crystal_eng(const double (*)[3], double **, int)
  -> INLINE: (97,3) destroy<double>(double **)
    -> INLINE: mem.h:(85,5) sfree(void *)
    -> INLINE: mem.h:(86,5) sfree(void *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(70,11)
<Peeled>
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(70,11)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(70,11)
<Remainder>
LOOP END

LOOP BEGIN at elastic.cpp(77,3)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

   LOOP BEGIN at elastic.cpp(453,3) inlined into elastic.cpp(87,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between basis line 455 and basis line 456

      LOOP BEGIN at elastic.cpp(454,5) inlined into elastic.cpp(87,5)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between basis line 455 and basis line 456
         remark #25436: completely unrolled by 3  

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(87,5)
            remark #25085: Preprocess Loopnests: Moving Out Load and Store    [ elastic.cpp(456,31) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #25436: completely unrolled by 3  
         LOOP END

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(87,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(87,5)
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at elastic.cpp(440,3) inlined into elastic.cpp(84,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ elastic.cpp(443,7) ]
      remark #25436: completely unrolled by 3  

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(84,5)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ elastic.cpp(443,7) ]
         remark #25436: completely unrolled by 3  

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(84,5)
            remark #25085: Preprocess Loopnests: Moving Out Load and Store    [ elastic.cpp(443,31) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #25436: completely unrolled by 3  
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(84,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(84,5)
         LOOP END
      LOOP END

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(84,5)

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(84,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(84,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(84,5)
         LOOP END
      LOOP END

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(84,5)

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(84,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(84,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(84,5)
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: ShearModulus()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (ShearModulus()) [27] elastic.cpp(243,1)
  -> (253,3) set_struc(const char *, double, int &)
  -> INLINE: (254,11) VolumePerAtom(const double (*)[3], int)
  -> INLINE: (255,11) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> (257,3) InitStrain(double (*)[3])
  -> INLINE: (270,5) TransformVector(double (*)[3], double (*)[3], double (*)[3])
  -> INLINE: (273,5) TransformBasis(double **, double (*)[3], double **, int)
  -> (276,9) crystal_eng(const double (*)[3], double **, int)
  -> INLINE: (283,3) destroy<double>(double **)
    -> INLINE: mem.h:(85,5) sfree(void *)
    -> INLINE: mem.h:(86,5) sfree(void *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(255,11)
<Peeled>
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(255,11)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(255,11)
<Remainder>
LOOP END

LOOP BEGIN at elastic.cpp(261,3)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

   LOOP BEGIN at elastic.cpp(453,3) inlined into elastic.cpp(273,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between basis line 455 and basis line 456

      LOOP BEGIN at elastic.cpp(454,5) inlined into elastic.cpp(273,5)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between basis line 455 and basis line 456
         remark #25436: completely unrolled by 3  

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(273,5)
            remark #25085: Preprocess Loopnests: Moving Out Load and Store    [ elastic.cpp(456,31) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #25436: completely unrolled by 3  
         LOOP END

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(273,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(273,5)
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at elastic.cpp(440,3) inlined into elastic.cpp(270,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ elastic.cpp(443,7) ]
      remark #25436: completely unrolled by 3  

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(270,5)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ elastic.cpp(443,7) ]
         remark #25436: completely unrolled by 3  

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(270,5)
            remark #25085: Preprocess Loopnests: Moving Out Load and Store    [ elastic.cpp(443,31) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #25436: completely unrolled by 3  
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(270,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(270,5)
         LOOP END
      LOOP END

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(270,5)

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(270,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(270,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(270,5)
         LOOP END
      LOOP END

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(270,5)

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(270,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(270,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(270,5)
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: c44()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (c44()) [28] elastic.cpp(150,1)
  -> (160,3) set_struc(const char *, double, int &)
  -> INLINE: (161,11) VolumePerAtom(const double (*)[3], int)
  -> INLINE: (162,11) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> (164,3) InitStrain(double (*)[3])
  -> INLINE: (177,5) TransformVector(double (*)[3], double (*)[3], double (*)[3])
  -> INLINE: (180,5) TransformBasis(double **, double (*)[3], double **, int)
  -> (183,9) crystal_eng(const double (*)[3], double **, int)
  -> INLINE: (190,3) destroy<double>(double **)
    -> INLINE: mem.h:(85,5) sfree(void *)
    -> INLINE: mem.h:(86,5) sfree(void *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(162,11)
<Peeled>
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(162,11)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(162,11)
<Remainder>
LOOP END

LOOP BEGIN at elastic.cpp(168,3)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

   LOOP BEGIN at elastic.cpp(453,3) inlined into elastic.cpp(180,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between basis line 455 and basis line 456

      LOOP BEGIN at elastic.cpp(454,5) inlined into elastic.cpp(180,5)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between basis line 455 and basis line 456
         remark #25436: completely unrolled by 3  

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(180,5)
            remark #25085: Preprocess Loopnests: Moving Out Load and Store    [ elastic.cpp(456,31) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #25436: completely unrolled by 3  
         LOOP END

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(180,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(180,5)
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at elastic.cpp(440,3) inlined into elastic.cpp(177,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ elastic.cpp(443,7) ]
      remark #25436: completely unrolled by 3  

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(177,5)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ elastic.cpp(443,7) ]
         remark #25436: completely unrolled by 3  

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(177,5)
            remark #25085: Preprocess Loopnests: Moving Out Load and Store    [ elastic.cpp(443,31) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #25436: completely unrolled by 3  
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(177,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(177,5)
         LOOP END
      LOOP END

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(177,5)

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(177,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(177,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(177,5)
         LOOP END
      LOOP END

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(177,5)

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(177,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(177,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(177,5)
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: SFp111()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SFp111()) [29] surfaces.cpp(855,1)
  -> INLINE: (874,34) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> INLINE: (875,19) grow<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(62,31) create<double>(double **&, int, int, const char *)
      -> INLINE: (42,27) smalloc(int, const char *)
      -> INLINE: (44,23) smalloc(int, const char *)
    -> INLINE: mem.h:(65,27) srealloc(void *, int, const char *)
    -> INLINE: mem.h:(67,23) srealloc(void *, int, const char *)
  -> INLINE: (936,34) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> INLINE: (937,19) grow<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(62,31) create<double>(double **&, int, int, const char *)
      -> INLINE: (42,27) smalloc(int, const char *)
      -> INLINE: (44,23) smalloc(int, const char *)
    -> INLINE: mem.h:(65,27) srealloc(void *, int, const char *)
    -> INLINE: mem.h:(67,23) srealloc(void *, int, const char *)
  -> INLINE: (999,34) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> INLINE: (1000,19) grow<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(62,31) create<double>(double **&, int, int, const char *)
      -> INLINE: (42,27) smalloc(int, const char *)
      -> INLINE: (44,23) smalloc(int, const char *)
    -> INLINE: mem.h:(65,27) srealloc(void *, int, const char *)
    -> INLINE: mem.h:(67,23) srealloc(void *, int, const char *)
  -> INLINE: (1095,13) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> (1097,11) crystal_eng(const double (*)[3], double **, int)
  -> INLINE: (1165,2) WriteConfigs(const char *, const char *, double (*)[3], double **, int)
  -> (1167,6) crystal_eng(const double (*)[3], double **, int)
  -> INLINE: (1210,4) WriteConfigs(const char *, const char *, double (*)[3], double **, int)
  -> (1212,8) crystal_eng(const double (*)[3], double **, int)
  -> INLINE: (1218,5) destroy<double>(double **)
    -> INLINE: mem.h:(85,5) sfree(void *)
    -> INLINE: mem.h:(86,5) sfree(void *)
  -> (1222,5) errmsg(const char *, const char *, const char *, int)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(874,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 9  
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into surfaces.cpp(875,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 71 and basis0 line 71
   remark #25436: completely unrolled by 9  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(875,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 9  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(936,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 9  
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into surfaces.cpp(937,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 71 and basis0 line 71
   remark #25436: completely unrolled by 9  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(937,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 9  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(999,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25438: unrolled without remainder by 2  
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into surfaces.cpp(1000,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 71 and basis0 line 71
   remark #25438: unrolled without remainder by 2  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(1000,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25438: unrolled without remainder by 2  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(1095,13)
<Peeled>
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(1095,13)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(1095,13)
<Remainder>
LOOP END

LOOP BEGIN at surfaces.cpp(1152,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between basis0 line 1155 and trans0 line 1167

   LOOP BEGIN at surfaces.cpp(1153,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between basis0 line 1155 and trans0 line 1167

      LOOP BEGIN at surfaces.cpp(1154,2)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between basis0 line 1155 and basis line 1162
      LOOP END

      LOOP BEGIN at write.cpp(775,3) inlined into surfaces.cpp(1165,2)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between element line 776 and basis line 776
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at surfaces.cpp(1197,7)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between basis0 line 1200 and trans0 line 1212

   LOOP BEGIN at surfaces.cpp(1198,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between basis0 line 1200 and trans0 line 1212

      LOOP BEGIN at surfaces.cpp(1199,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between basis0 line 1200 and basis line 1207
      LOOP END

      LOOP BEGIN at write.cpp(775,3) inlined into surfaces.cpp(1210,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between element line 776 and basis line 776
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: crystal_eng(const double (*)[3], double **, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (crystal_eng(const double (*)[3], double **, int)) [30] compute.cpp(1422,1)
  -> INLINE: (1428,11) create<double>(double *&, int, const char *)
    -> INLINE: mem.h:(16,17) smalloc(int, const char *)
  -> INLINE: (1429,12) create<int>(int *&, int, const char *)
    -> INLINE: mem.h:(16,17) smalloc(int, const char *)
  -> (1434,3) One_NeighborList(const double (*)[3], double **, int, int *&, double *&)
  -> INLINE: (1440,5) NRvector<double>::~NRvector(NRvector<double> *)
  -> (1440,9) Energy(const int *, const double *, int, const VecDoub *)
  -> (1440,32) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (1440,32) NRvector<double>::NRvector(NRvector<double> *, const NRvector<double> &)
  -> INLINE: (1444,5) PartitionNNetParams(VecDoub &)
    -> INLINE: NNetInterface.cpp:(70,43) NRvector<double>::operator[](NRvector<double> *, int)
    -> INLINE: NNetInterface.cpp:(75,29) NRvector<double>::operator[](NRvector<double> *, int)
    -> INLINE: NNetInterface.cpp:(79,14) NRvector<double>::size(const NRvector<double> *) const
    -> INLINE: NNetInterface.cpp:(81,9) NRvector<double>::size(const NRvector<double> *) const
  -> (1447,5) iCompute_LSP(const int *, const double *, int, double *)
  -> INLINE: (1449,9) NNET_Eng(const double *, int)
    -> INLINE: NNetInterface.cpp:(496,5) NNetOutput(double &, int)
      -> (452,3) evaluate_nnet()
  -> INLINE: (1453,5) PartitionNNetParams(VecDoub &)
    -> INLINE: NNetInterface.cpp:(70,43) NRvector<double>::operator[](NRvector<double> *, int)
    -> INLINE: NNetInterface.cpp:(75,29) NRvector<double>::operator[](NRvector<double> *, int)
    -> INLINE: NNetInterface.cpp:(79,14) NRvector<double>::size(const NRvector<double> *) const
    -> INLINE: NNetInterface.cpp:(81,9) NRvector<double>::size(const NRvector<double> *) const
  -> (1456,5) iCompute_LSP(const int *, const double *, int, double *)
  -> (1458,9) NNET_Eng(const double *, const int *, const double *, int)
  -> (1463,5) errmsg(const char *, const char *, const char *, int)
  -> INLINE: (1469,3) sfree(void *)
  -> INLINE: (1470,3) sfree(void *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at compute.cpp(1431,3)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at compute.cpp(1431,3)
   <Peeled>
   LOOP END

   LOOP BEGIN at compute.cpp(1431,3)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at compute.cpp(1431,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at nrvector.h(68,5) inlined into compute.cpp(1440,32)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at nrvector.h(68,5) inlined into compute.cpp(1440,32)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at nrvector.h(68,5) inlined into compute.cpp(1440,32)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at NNetInterface.cpp(69,7) inlined into compute.cpp(1444,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at NNetInterface.cpp(74,5) inlined into compute.cpp(1444,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at NNetInterface.cpp(493,3) inlined into compute.cpp(1449,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between local_Gi line 495 and layer line 495

   LOOP BEGIN at NNetInterface.cpp(495,5) inlined into compute.cpp(1449,9)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at NNetInterface.cpp(495,5) inlined into compute.cpp(1449,9)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at NNetInterface.cpp(495,5) inlined into compute.cpp(1449,9)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at NNetInterface.cpp(69,7) inlined into compute.cpp(1453,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at NNetInterface.cpp(74,5) inlined into compute.cpp(1453,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END


Non-optimizable loops:


LOOP BEGIN at NNetInterface.cpp(66,3) inlined into compute.cpp(1444,5)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at NNetInterface.cpp(68,5) inlined into compute.cpp(1444,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END

LOOP BEGIN at NNetInterface.cpp(66,3) inlined into compute.cpp(1453,5)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at NNetInterface.cpp(68,5) inlined into compute.cpp(1453,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

compute.cpp(1431,28):remark #34026: call to memset implemented as a call to optimized library version
nrvector.h(68,30):remark #34026: call to memcpy implemented as a call to optimized library version
NNetInterface.cpp(495,32):remark #34026: call to memcpy implemented as a call to optimized library version
===========================================================================

Begin optimization report for: SFp100()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SFp100()) [31] surfaces.cpp(1231,1)
  -> INLINE: (1247,34) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> INLINE: (1248,19) grow<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(62,31) create<double>(double **&, int, int, const char *)
      -> INLINE: (42,27) smalloc(int, const char *)
      -> INLINE: (44,23) smalloc(int, const char *)
    -> INLINE: mem.h:(65,27) srealloc(void *, int, const char *)
    -> INLINE: mem.h:(67,23) srealloc(void *, int, const char *)
  -> INLINE: (1295,34) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> INLINE: (1296,19) grow<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(62,31) create<double>(double **&, int, int, const char *)
      -> INLINE: (42,27) smalloc(int, const char *)
      -> INLINE: (44,23) smalloc(int, const char *)
    -> INLINE: mem.h:(65,27) srealloc(void *, int, const char *)
    -> INLINE: mem.h:(67,23) srealloc(void *, int, const char *)
  -> INLINE: (1361,34) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> INLINE: (1362,19) grow<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(62,31) create<double>(double **&, int, int, const char *)
      -> INLINE: (42,27) smalloc(int, const char *)
      -> INLINE: (44,23) smalloc(int, const char *)
    -> INLINE: mem.h:(65,27) srealloc(void *, int, const char *)
    -> INLINE: mem.h:(67,23) srealloc(void *, int, const char *)
  -> INLINE: (1432,13) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> (1433,11) crystal_eng(const double (*)[3], double **, int)
  -> INLINE: (1453,2) WriteConfigs(const char *, const char *, double (*)[3], double **, int)
  -> (1455,6) crystal_eng(const double (*)[3], double **, int)
  -> INLINE: (1460,5) destroy<double>(double **)
    -> INLINE: mem.h:(85,5) sfree(void *)
    -> INLINE: mem.h:(86,5) sfree(void *)
  -> (1466,5) errmsg(const char *, const char *, const char *, int)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(1247,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 6  
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into surfaces.cpp(1248,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 71 and basis0 line 71
   remark #25436: completely unrolled by 6  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(1248,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 6  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(1295,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 10  
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into surfaces.cpp(1296,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 71 and basis0 line 71
   remark #25436: completely unrolled by 10  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(1296,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 10  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(1361,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 12  
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into surfaces.cpp(1362,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 71 and basis0 line 71
   remark #25436: completely unrolled by 12  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(1362,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 12  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(1432,13)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25436: completely unrolled by 12  
LOOP END

LOOP BEGIN at surfaces.cpp(1440,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between basis0 line 1443 and trans0 line 1455

   LOOP BEGIN at surfaces.cpp(1441,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between basis0 line 1443 and trans0 line 1455

      LOOP BEGIN at write.cpp(775,3) inlined into surfaces.cpp(1453,2)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between element line 776 and basis line 776
      LOOP END

      LOOP BEGIN at surfaces.cpp(1442,2)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between basis0 line 1443 and basis line 1450
         remark #25436: completely unrolled by 12  
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: SFp110()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SFp110()) [32] surfaces.cpp(1475,1)
  -> INLINE: (1491,34) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> INLINE: (1492,19) grow<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(62,31) create<double>(double **&, int, int, const char *)
      -> INLINE: (42,27) smalloc(int, const char *)
      -> INLINE: (44,23) smalloc(int, const char *)
    -> INLINE: mem.h:(65,27) srealloc(void *, int, const char *)
    -> INLINE: mem.h:(67,23) srealloc(void *, int, const char *)
  -> INLINE: (1549,34) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> INLINE: (1550,19) grow<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(62,31) create<double>(double **&, int, int, const char *)
      -> INLINE: (42,27) smalloc(int, const char *)
      -> INLINE: (44,23) smalloc(int, const char *)
    -> INLINE: mem.h:(65,27) srealloc(void *, int, const char *)
    -> INLINE: mem.h:(67,23) srealloc(void *, int, const char *)
  -> INLINE: (1613,34) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> INLINE: (1614,19) grow<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(62,31) create<double>(double **&, int, int, const char *)
      -> INLINE: (42,27) smalloc(int, const char *)
      -> INLINE: (44,23) smalloc(int, const char *)
    -> INLINE: mem.h:(65,27) srealloc(void *, int, const char *)
    -> INLINE: mem.h:(67,23) srealloc(void *, int, const char *)
  -> INLINE: (1720,13) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> (1721,11) crystal_eng(const double (*)[3], double **, int)
  -> INLINE: (1740,2) WriteConfigs(const char *, const char *, double (*)[3], double **, int)
  -> (1742,6) crystal_eng(const double (*)[3], double **, int)
  -> INLINE: (1748,5) destroy<double>(double **)
    -> INLINE: mem.h:(85,5) sfree(void *)
    -> INLINE: mem.h:(86,5) sfree(void *)
  -> (1754,5) errmsg(const char *, const char *, const char *, int)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(1491,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 8  
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into surfaces.cpp(1492,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 71 and basis0 line 71
   remark #25436: completely unrolled by 8  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(1492,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 8  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(1549,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 10  
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into surfaces.cpp(1550,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 71 and basis0 line 71
   remark #25436: completely unrolled by 10  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(1550,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25436: completely unrolled by 10  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(1613,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25438: unrolled without remainder by 2  
LOOP END

LOOP BEGIN at mem.h(70,5) inlined into surfaces.cpp(1614,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 71 and basis0 line 71
   remark #25438: unrolled without remainder by 2  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(1614,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between basis0 line 48 and basis0 line 48
   remark #25438: unrolled without remainder by 2  
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(1720,13)
<Peeled>
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(1720,13)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into surfaces.cpp(1720,13)
<Remainder>
LOOP END

LOOP BEGIN at surfaces.cpp(1727,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between basis0 line 1730 and trans0 line 1742

   LOOP BEGIN at surfaces.cpp(1728,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between basis0 line 1730 and trans0 line 1742

      LOOP BEGIN at write.cpp(775,3) inlined into surfaces.cpp(1740,2)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between element line 776 and basis line 776
      LOOP END

      LOOP BEGIN at surfaces.cpp(1729,2)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between basis0 line 1730 and basis line 1737
         remark #25436: completely unrolled by 20  
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: __sti__$E()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__sti__$E()) [34] <compiler generated>

===========================================================================

Begin optimization report for: Ranq1::Ranq1(Ranq1 *, Ullong)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (Ranq1::Ranq1(Ranq1 *, Ullong)) ran.h(26,46)

===========================================================================

Begin optimization report for: Ranq1::int64(Ranq1 *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (Ranq1::int64(Ranq1 *)) ran.h(30,25)

===========================================================================

Begin optimization report for: Ranq1::doub(Ranq1 *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (Ranq1::doub(Ranq1 *)) ran.h(34,22)

===========================================================================

Begin optimization report for: VolumePerAtom(const double (*)[3], int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (VolumePerAtom(const double (*)[3], int)) [39] compute.cpp(1146,1)

===========================================================================

Begin optimization report for: compute_LSP()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (compute_LSP()) [40] compute.cpp(1570,1)
  -> INLINE: (1578,24) create<double>(double *&, int, const char *)
    -> INLINE: mem.h:(16,17) smalloc(int, const char *)
  -> (1585,5) compute_atomic_LSP(int, const double *, double *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at compute.cpp(1577,3)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

   LOOP BEGIN at compute.cpp(1579,5)
      remark #25408: memset generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at compute.cpp(1579,5)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between atoms line 1579 and atoms line 1579
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at compute.cpp(1579,5)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

compute.cpp(1579,29):remark #34026: call to memset implemented as a call to optimized library version
===========================================================================

Begin optimization report for: compute_atomic_LSP(int, const double *, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (compute_atomic_LSP(int, const double *, double *)) [41] compute.cpp(1594,1)
  -> INLINE: (1629,47) CutoffFunc(double, double, double)
  -> INLINE: (1630,67) CutoffFunc(double, double, double)
  -> INLINE: (1631,53) CutoffFunc(double, double, double)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at compute.cpp(1614,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at compute.cpp(1616,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at compute.cpp(1619,7)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at compute.cpp(1633,2)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between Pl line 1634 and Pl line 1634
         LOOP END

         LOOP BEGIN at compute.cpp(1635,2)
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at compute.cpp(1635,2)
         <Remainder>
            remark #15301: REMAINDER LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at compute.cpp(1635,2)
         <Remainder>
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at compute.cpp(1649,7)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at compute.cpp(1649,7)
   <Remainder>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at compute.cpp(1649,7)
   <Remainder>
   LOOP END

   LOOP BEGIN at compute.cpp(1657,7)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at compute.cpp(1657,7)
   <Remainder>
   LOOP END

   LOOP BEGIN at compute.cpp(1664,7)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at compute.cpp(1664,7)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: __sti__$E()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__sti__$E()) [42] <compiler generated>

===========================================================================

Begin optimization report for: grow<double>(double *&, int, const char *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (grow<double>(double *&, int, const char *)) mem.h(26,1)

===========================================================================

Begin optimization report for: __sti__$E()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__sti__$E()) [44] <compiler generated>

===========================================================================

Begin optimization report for: c33()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (c33()) [45] elastic.cpp(104,1)
  -> (114,3) set_struc(const char *, double, int &)
  -> INLINE: (115,11) VolumePerAtom(const double (*)[3], int)
  -> INLINE: (117,11) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> (119,3) InitStrain(double (*)[3])
  -> INLINE: (130,5) TransformVector(double (*)[3], double (*)[3], double (*)[3])
  -> INLINE: (133,5) TransformBasis(double **, double (*)[3], double **, int)
  -> (136,9) crystal_eng(const double (*)[3], double **, int)
  -> INLINE: (143,3) destroy<double>(double **)
    -> INLINE: mem.h:(85,5) sfree(void *)
    -> INLINE: mem.h:(86,5) sfree(void *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(117,11)
<Peeled>
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(117,11)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(117,11)
<Remainder>
LOOP END

LOOP BEGIN at elastic.cpp(123,3)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

   LOOP BEGIN at elastic.cpp(453,3) inlined into elastic.cpp(133,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between basis line 455 and basis line 456

      LOOP BEGIN at elastic.cpp(454,5) inlined into elastic.cpp(133,5)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between basis line 455 and basis line 456
         remark #25436: completely unrolled by 3  

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(133,5)
            remark #25085: Preprocess Loopnests: Moving Out Load and Store    [ elastic.cpp(456,31) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #25436: completely unrolled by 3  
         LOOP END

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(133,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(133,5)
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at elastic.cpp(440,3) inlined into elastic.cpp(130,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ elastic.cpp(443,7) ]
      remark #25436: completely unrolled by 3  

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(130,5)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ elastic.cpp(443,7) ]
         remark #25436: completely unrolled by 3  

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(130,5)
            remark #25085: Preprocess Loopnests: Moving Out Load and Store    [ elastic.cpp(443,31) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #25436: completely unrolled by 3  
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(130,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(130,5)
         LOOP END
      LOOP END

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(130,5)

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(130,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(130,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(130,5)
         LOOP END
      LOOP END

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(130,5)

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(130,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(130,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(130,5)
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: c66()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (c66()) [46] elastic.cpp(197,1)
  -> (207,3) set_struc(const char *, double, int &)
  -> INLINE: (208,11) VolumePerAtom(const double (*)[3], int)
  -> INLINE: (209,11) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> (211,3) InitStrain(double (*)[3])
  -> INLINE: (223,5) TransformVector(double (*)[3], double (*)[3], double (*)[3])
  -> INLINE: (226,5) TransformBasis(double **, double (*)[3], double **, int)
  -> (229,9) crystal_eng(const double (*)[3], double **, int)
  -> INLINE: (236,3) destroy<double>(double **)
    -> INLINE: mem.h:(85,5) sfree(void *)
    -> INLINE: mem.h:(86,5) sfree(void *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(209,11)
<Peeled>
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(209,11)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(209,11)
<Remainder>
LOOP END

LOOP BEGIN at elastic.cpp(215,3)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

   LOOP BEGIN at elastic.cpp(453,3) inlined into elastic.cpp(226,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between basis line 455 and basis line 456

      LOOP BEGIN at elastic.cpp(454,5) inlined into elastic.cpp(226,5)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between basis line 455 and basis line 456
         remark #25436: completely unrolled by 3  

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(226,5)
            remark #25085: Preprocess Loopnests: Moving Out Load and Store    [ elastic.cpp(456,31) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #25436: completely unrolled by 3  
         LOOP END

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(226,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(226,5)
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at elastic.cpp(440,3) inlined into elastic.cpp(223,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ elastic.cpp(443,7) ]
      remark #25436: completely unrolled by 3  

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(223,5)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ elastic.cpp(443,7) ]
         remark #25436: completely unrolled by 3  

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(223,5)
            remark #25085: Preprocess Loopnests: Moving Out Load and Store    [ elastic.cpp(443,31) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #25436: completely unrolled by 3  
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(223,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(223,5)
         LOOP END
      LOOP END

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(223,5)

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(223,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(223,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(223,5)
         LOOP END
      LOOP END

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(223,5)

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(223,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(223,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(223,5)
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: c11pc12()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (c11pc12()) [47] elastic.cpp(290,1)
  -> (300,3) set_struc(const char *, double, int &)
  -> INLINE: (301,11) VolumePerAtom(const double (*)[3], int)
  -> INLINE: (302,11) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> (304,3) InitStrain(double (*)[3])
  -> INLINE: (316,5) TransformVector(double (*)[3], double (*)[3], double (*)[3])
  -> INLINE: (319,5) TransformBasis(double **, double (*)[3], double **, int)
  -> (322,9) crystal_eng(const double (*)[3], double **, int)
  -> INLINE: (329,3) destroy<double>(double **)
    -> INLINE: mem.h:(85,5) sfree(void *)
    -> INLINE: mem.h:(86,5) sfree(void *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(302,11)
<Peeled>
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(302,11)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(302,11)
<Remainder>
LOOP END

LOOP BEGIN at elastic.cpp(308,3)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

   LOOP BEGIN at elastic.cpp(453,3) inlined into elastic.cpp(319,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between basis line 455 and basis line 456

      LOOP BEGIN at elastic.cpp(454,5) inlined into elastic.cpp(319,5)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between basis line 455 and basis line 456
         remark #25436: completely unrolled by 3  

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(319,5)
            remark #25085: Preprocess Loopnests: Moving Out Load and Store    [ elastic.cpp(456,31) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #25436: completely unrolled by 3  
         LOOP END

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(319,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(319,5)
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at elastic.cpp(440,3) inlined into elastic.cpp(316,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ elastic.cpp(443,7) ]
      remark #25436: completely unrolled by 3  

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(316,5)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ elastic.cpp(443,7) ]
         remark #25436: completely unrolled by 3  

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(316,5)
            remark #25085: Preprocess Loopnests: Moving Out Load and Store    [ elastic.cpp(443,31) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #25436: completely unrolled by 3  
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(316,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(316,5)
         LOOP END
      LOOP END

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(316,5)

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(316,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(316,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(316,5)
         LOOP END
      LOOP END

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(316,5)

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(316,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(316,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(316,5)
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: c13pc11pc33()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (c13pc11pc33()) [48] elastic.cpp(336,1)
  -> (346,3) set_struc(const char *, double, int &)
  -> INLINE: (347,11) VolumePerAtom(const double (*)[3], int)
  -> INLINE: (348,11) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> (350,3) InitStrain(double (*)[3])
  -> INLINE: (362,5) TransformVector(double (*)[3], double (*)[3], double (*)[3])
  -> INLINE: (365,5) TransformBasis(double **, double (*)[3], double **, int)
  -> (368,9) crystal_eng(const double (*)[3], double **, int)
  -> INLINE: (375,3) destroy<double>(double **)
    -> INLINE: mem.h:(85,5) sfree(void *)
    -> INLINE: mem.h:(86,5) sfree(void *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(348,11)
<Peeled>
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(348,11)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(348,11)
<Remainder>
LOOP END

LOOP BEGIN at elastic.cpp(354,3)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

   LOOP BEGIN at elastic.cpp(453,3) inlined into elastic.cpp(365,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between basis line 455 and basis line 456

      LOOP BEGIN at elastic.cpp(454,5) inlined into elastic.cpp(365,5)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between basis line 455 and basis line 456
         remark #25436: completely unrolled by 3  

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(365,5)
            remark #25085: Preprocess Loopnests: Moving Out Load and Store    [ elastic.cpp(456,31) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #25436: completely unrolled by 3  
         LOOP END

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(365,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(365,5)
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at elastic.cpp(440,3) inlined into elastic.cpp(362,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ elastic.cpp(443,7) ]
      remark #25436: completely unrolled by 3  

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(362,5)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ elastic.cpp(443,7) ]
         remark #25436: completely unrolled by 3  

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(362,5)
            remark #25085: Preprocess Loopnests: Moving Out Load and Store    [ elastic.cpp(443,31) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #25436: completely unrolled by 3  
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(362,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(362,5)
         LOOP END
      LOOP END

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(362,5)

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(362,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(362,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(362,5)
         LOOP END
      LOOP END

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(362,5)

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(362,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(362,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(362,5)
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: c14pc11pc44()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (c14pc11pc44()) [49] elastic.cpp(381,1)
  -> (391,3) set_struc(const char *, double, int &)
  -> INLINE: (392,11) VolumePerAtom(const double (*)[3], int)
  -> INLINE: (393,11) create<double>(double **&, int, int, const char *)
    -> INLINE: mem.h:(42,27) smalloc(int, const char *)
    -> INLINE: mem.h:(44,23) smalloc(int, const char *)
  -> (395,3) InitStrain(double (*)[3])
  -> INLINE: (408,5) TransformVector(double (*)[3], double (*)[3], double (*)[3])
  -> INLINE: (411,5) TransformBasis(double **, double (*)[3], double **, int)
  -> (414,9) crystal_eng(const double (*)[3], double **, int)
  -> INLINE: (421,3) destroy<double>(double **)
    -> INLINE: mem.h:(85,5) sfree(void *)
    -> INLINE: mem.h:(86,5) sfree(void *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(393,11)
<Peeled>
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(393,11)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at mem.h(47,5) inlined into elastic.cpp(393,11)
<Remainder>
LOOP END

LOOP BEGIN at elastic.cpp(399,3)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

   LOOP BEGIN at elastic.cpp(453,3) inlined into elastic.cpp(411,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between basis line 455 and basis line 456

      LOOP BEGIN at elastic.cpp(454,5) inlined into elastic.cpp(411,5)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between basis line 455 and basis line 456
         remark #25436: completely unrolled by 3  

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(411,5)
            remark #25085: Preprocess Loopnests: Moving Out Load and Store    [ elastic.cpp(456,31) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #25436: completely unrolled by 3  
         LOOP END

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(411,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(456,7) inlined into elastic.cpp(411,5)
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at elastic.cpp(440,3) inlined into elastic.cpp(408,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ elastic.cpp(443,7) ]
      remark #25436: completely unrolled by 3  

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(408,5)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ elastic.cpp(443,7) ]
         remark #25436: completely unrolled by 3  

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(408,5)
            remark #25085: Preprocess Loopnests: Moving Out Load and Store    [ elastic.cpp(443,31) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #25436: completely unrolled by 3  
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(408,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(408,5)
         LOOP END
      LOOP END

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(408,5)

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(408,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(408,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(408,5)
         LOOP END
      LOOP END

      LOOP BEGIN at elastic.cpp(441,5) inlined into elastic.cpp(408,5)

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(408,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(408,5)
         LOOP END

         LOOP BEGIN at elastic.cpp(443,7) inlined into elastic.cpp(408,5)
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: CopyStruct(double (*)[3], double **, double (*)[3], double **, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (CopyStruct(double (*)[3], double **, double (*)[3], double **, int)) [50] elastic.cpp(428,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at elastic.cpp(429,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between t line 430 and b line 431

   LOOP BEGIN at elastic.cpp(431,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between b line 431 and b line 431
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at elastic.cpp(431,5)
   <Remainder>
   LOOP END

   LOOP BEGIN at elastic.cpp(430,5)
      remark #25401: memcopy(with guard) generated
      remark #25401: memcopy(with guard) generated
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between t line 430 and t0 line 430
      remark #25436: completely unrolled by 3  
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: TransformVector(double (*)[3], double (*)[3], double (*)[3])

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (TransformVector(double (*)[3], double (*)[3], double (*)[3])) [51] elastic.cpp(439,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at elastic.cpp(440,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between transnew line 442 and transold line 443
   remark #25436: completely unrolled by 3  

   LOOP BEGIN at elastic.cpp(441,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between transnew line 442 and transold line 443
      remark #25436: completely unrolled by 3  

      LOOP BEGIN at elastic.cpp(443,7)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between transnew line 443 and transnew line 443
         remark #25436: completely unrolled by 3  
      LOOP END

      LOOP BEGIN at elastic.cpp(443,7)
      LOOP END

      LOOP BEGIN at elastic.cpp(443,7)
      LOOP END
   LOOP END

   LOOP BEGIN at elastic.cpp(441,5)

      LOOP BEGIN at elastic.cpp(443,7)
      LOOP END

      LOOP BEGIN at elastic.cpp(443,7)
      LOOP END

      LOOP BEGIN at elastic.cpp(443,7)
      LOOP END
   LOOP END

   LOOP BEGIN at elastic.cpp(441,5)

      LOOP BEGIN at elastic.cpp(443,7)
      LOOP END

      LOOP BEGIN at elastic.cpp(443,7)
      LOOP END

      LOOP BEGIN at elastic.cpp(443,7)
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: TransformBasis(double **, double (*)[3], double **, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (TransformBasis(double **, double (*)[3], double **, int)) [52] elastic.cpp(452,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at elastic.cpp(453,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between newbasis line 455 and newbasis line 456

   LOOP BEGIN at elastic.cpp(454,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between newbasis line 455 and newbasis line 456
      remark #25436: completely unrolled by 3  

      LOOP BEGIN at elastic.cpp(456,7)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between newbasis line 456 and newbasis line 456
         remark #25436: completely unrolled by 3  
      LOOP END

      LOOP BEGIN at elastic.cpp(456,7)
      LOOP END

      LOOP BEGIN at elastic.cpp(456,7)
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: __sti__$E()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__sti__$E()) [53] <compiler generated>

===========================================================================

Begin optimization report for: NRvector<double>::NRvector(NRvector<double> *, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (NRvector<double>::NRvector(NRvector<double> *, int)) nrvector.h(39,65)

===========================================================================

Begin optimization report for: NRvector<double>::NRvector(NRvector<double> *, int, const double *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (NRvector<double>::NRvector(NRvector<double> *, int, const double *)) nrvector.h(54,1)

===========================================================================

Begin optimization report for: NRvector<double>::NRvector(NRvector<double> *, const NRvector<double> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (NRvector<double>::NRvector(NRvector<double> *, const NRvector<double> &)) nrvector.h(64,1)

===========================================================================

Begin optimization report for: ComputeLocalStrucParam()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (ComputeLocalStrucParam()) [58] compute.cpp(956,1)
  -> INLINE: (975,26) create<double>(double *&, int, const char *)
    -> INLINE: mem.h:(16,17) smalloc(int, const char *)
  -> INLINE: (996,44) CutoffFunc(double, double, double)
  -> INLINE: (997,45) CutoffFunc(double, double, double)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at compute.cpp(977,5)
   remark #25408: memset generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at compute.cpp(977,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between Lattice line 977 and Lattice line 977
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at compute.cpp(977,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at compute.cpp(980,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at compute.cpp(982,2)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at compute.cpp(985,4)
         remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 1

         LOOP BEGIN at compute.cpp(999,6)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between Pl line 999 and Pl line 999
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at compute.cpp(972,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at compute.cpp(978,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

compute.cpp(977,30):remark #34026: call to memset implemented as a call to optimized library version
===========================================================================

Begin optimization report for: mean_sqr(const VecDoub &, double)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (mean_sqr(const VecDoub &, double)) [59] compute.cpp(1352,1)
  -> INLINE: (1354,21) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (1354,21) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (1354,42) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (1354,47) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (1355,18) NRvector<double>::size(const NRvector<double> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at compute.cpp(1354,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END
===========================================================================

Begin optimization report for: compute_hb_constraint2()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (compute_hb_constraint2()) [60] compute.cpp(1368,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at compute.cpp(1374,7)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

   LOOP BEGIN at compute.cpp(1375,9)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1

      LOOP BEGIN at compute.cpp(1376,11)
         remark #15527: loop was not vectorized: function call to fprintf(FILE *, const char *, ...) cannot be vectorized   [ compute.cpp(1378,13) ]
         remark #25436: completely unrolled by 8  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at compute.cpp(1388,7)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at compute.cpp(1390,7)
   remark #25408: memset generated
   remark #25408: memset generated
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at compute.cpp(1391,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at compute.cpp(1392,9)
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25439: unrolled with remainder by 2  

      LOOP BEGIN at compute.cpp(1393,11)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END
   LOOP END

   LOOP BEGIN at compute.cpp(1392,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at compute.cpp(1400,7)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at compute.cpp(1405,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at compute.cpp(1406,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at compute.cpp(1407,9)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: create<int>(int *&, int, const char *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (create<int>(int *&, int, const char *)) mem.h(14,1)

===========================================================================

Begin optimization report for: __sti__$E()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__sti__$E()) [62] <compiler generated>

===========================================================================

Begin optimization report for: Energy(const int *, const double *, int, const VecDoub *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (Energy(const int *, const double *, int, const VecDoub *)) [63] compute.cpp(24,1)
  -> INLINE: (60,34) CutoffFunc(double, double, double)
  -> INLINE: (61,15) CutoffFunc(double, double, double)
  -> INLINE: (61,34) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (62,33) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (81,32) CutoffFunc(double, double, double)
  -> INLINE: (82,13) CutoffFunc(double, double, double)
  -> INLINE: (82,34) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (83,26) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (83,51) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (92,37) CutoffFunc(double, double, double)
  -> INLINE: (93,18) CutoffFunc(double, double, double)
  -> INLINE: (93,39) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (94,21) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (95,25) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (96,21) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (97,24) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (101,22) NRvector<double>::operator[](const NRvector<double> *, int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at compute.cpp(42,5)
<Peeled>
LOOP END

LOOP BEGIN at compute.cpp(42,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at compute.cpp(42,5)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at compute.cpp(42,5)
<Remainder>
LOOP END

LOOP BEGIN at compute.cpp(51,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at compute.cpp(73,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at compute.cpp(88,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at compute.cpp(34,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at compute.cpp(48,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END

   LOOP BEGIN at compute.cpp(70,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: max_filter(const VecDoub &, double)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (max_filter(const VecDoub &, double)) [64] compute.cpp(1359,1)
  -> INLINE: (1361,11) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (1361,16) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (1362,21) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (1362,21) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (1362,41) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (1362,41) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (1362,41) NRvector<double>::operator[](const NRvector<double> *, int) const
  -> INLINE: (1362,41) NRvector<double>::operator[](const NRvector<double> *, int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at compute.cpp(1362,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END
===========================================================================

Begin optimization report for: compute_error(Struc_Data *&, int, VecDoub &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (compute_error(Struc_Data *&, int, VecDoub &)) [65] compute.cpp(914,1)
  -> INLINE: (923,2) NRvector<double>::~NRvector(NRvector<double> *)
  -> (923,14) Energy(const int *, const double *, int, const VecDoub *)
  -> (924,20) NRvector<double>::~NRvector(NRvector<double> *)
  -> INLINE: (924,20) NRvector<double>::NRvector(NRvector<double> *, const NRvector<double> &)
  -> INLINE: (929,2) PartitionNNetParams(VecDoub &)
    -> INLINE: NNetInterface.cpp:(70,43) NRvector<double>::operator[](NRvector<double> *, int)
    -> INLINE: NNetInterface.cpp:(75,29) NRvector<double>::operator[](NRvector<double> *, int)
    -> INLINE: NNetInterface.cpp:(79,14) NRvector<double>::size(const NRvector<double> *) const
    -> INLINE: NNetInterface.cpp:(81,9) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (930,14) NNET_Eng(const double *, int)
    -> INLINE: NNetInterface.cpp:(496,5) NNetOutput(double &, int)
      -> (452,3) evaluate_nnet()
  -> INLINE: (933,2) PartitionNNetParams(VecDoub &)
    -> INLINE: NNetInterface.cpp:(70,43) NRvector<double>::operator[](NRvector<double> *, int)
    -> INLINE: NNetInterface.cpp:(75,29) NRvector<double>::operator[](NRvector<double> *, int)
    -> INLINE: NNetInterface.cpp:(79,14) NRvector<double>::size(const NRvector<double> *) const
    -> INLINE: NNetInterface.cpp:(81,9) NRvector<double>::size(const NRvector<double> *) const
  -> INLINE: (938,4) NNetOutput(const int *, const double *, int, double &, int)
    -> NNetInterface.cpp:(461,3) evaluate_nnet()
    -> INLINE: NNetInterface.cpp:(465,18) NRvector<double>::NRvector(NRvector<double> *, int)
    -> NNetInterface.cpp:(465,18) NRvector<double>::~NRvector(NRvector<double> *)
    -> INLINE: NNetInterface.cpp:(469,11) NRvector<double>::operator[](NRvector<double> *, int)
    -> INLINE: NNetInterface.cpp:(472,13) NRvector<double>::operator[](NRvector<double> *, int)
    -> INLINE: NNetInterface.cpp:(475,5) NRvector<double>::~NRvector(NRvector<double> *)
    -> NNetInterface.cpp:(475,10) Atomic_Eng(const int *, const double *, int, const VecDoub *)
    -> INLINE: NNetInterface.cpp:(475,42) NRvector<double>::NRvector(NRvector<double> *, const NRvector<double> &)
    -> NNetInterface.cpp:(475,42) NRvector<double>::~NRvector(NRvector<double> *)
    -> INLINE: NNetInterface.cpp:(476,3) NRvector<double>::~NRvector(NRvector<double> *)
  -> (944,2) errmsg(const char *, const char *, const char *, int)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at nrvector.h(68,5) inlined into compute.cpp(924,20)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at nrvector.h(68,5) inlined into compute.cpp(924,20)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at nrvector.h(68,5) inlined into compute.cpp(924,20)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at NNetInterface.cpp(69,7) inlined into compute.cpp(929,2)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at NNetInterface.cpp(74,5) inlined into compute.cpp(929,2)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at NNetInterface.cpp(493,3) inlined into compute.cpp(930,14)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between lsparam line 495 and layer line 495

   LOOP BEGIN at NNetInterface.cpp(495,5) inlined into compute.cpp(930,14)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at NNetInterface.cpp(495,5) inlined into compute.cpp(930,14)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at NNetInterface.cpp(495,5) inlined into compute.cpp(930,14)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at NNetInterface.cpp(69,7) inlined into compute.cpp(933,2)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at NNetInterface.cpp(74,5) inlined into compute.cpp(933,2)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at compute.cpp(936,4)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at compute.cpp(936,4)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at compute.cpp(936,4)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at NNetInterface.cpp(468,21) inlined into compute.cpp(938,4)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at NNetInterface.cpp(471,7) inlined into compute.cpp(938,4)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at nrvector.h(68,5) inlined into compute.cpp(938,4)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at nrvector.h(68,5) inlined into compute.cpp(938,4)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at nrvector.h(68,5) inlined into compute.cpp(938,4)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at compute.cpp(919,5)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at NNetInterface.cpp(66,3) inlined into compute.cpp(929,2)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at NNetInterface.cpp(68,5) inlined into compute.cpp(929,2)
         remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
      LOOP END
   LOOP END

   LOOP BEGIN at NNetInterface.cpp(66,3) inlined into compute.cpp(933,2)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at NNetInterface.cpp(68,5) inlined into compute.cpp(933,2)
         remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
      LOOP END
   LOOP END

   LOOP BEGIN at compute.cpp(934,2)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

nrvector.h(68,30):remark #34026: call to memcpy implemented as a call to optimized library version
NNetInterface.cpp(495,32):remark #34026: call to memcpy implemented as a call to optimized library version
compute.cpp(937,6):remark #34026: call to memcpy implemented as a call to optimized library version
nrvector.h(68,30):remark #34026: call to memcpy implemented as a call to optimized library version
===========================================================================

Begin optimization report for: InitStrain(double (*)[3])

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (InitStrain(double (*)[3])) [66] elastic.cpp(463,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at elastic.cpp(464,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25436: completely unrolled by 3  

   LOOP BEGIN at elastic.cpp(465,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #25436: completely unrolled by 3  
   LOOP END

   LOOP BEGIN at elastic.cpp(465,5)
   LOOP END

   LOOP BEGIN at elastic.cpp(465,5)
   LOOP END
LOOP END
===========================================================================

    Report from: Profile guided optimizations [pgo]



Profile feedback used a statically estimated profile for the following routines:

  File: <compiler generated>
        __sti__$E()
        __sti__$E()
        __sti__$E()
        __sti__$E()
        __sti__$E()

  File: /usr/include/c++/4.8.5/bits/char_traits.h
        std::char_traits<char>::length(const std::char_traits<char>::char_type *)(259)

  File: compute.cpp
        Energy(const int *, const double *, int, const VecDoub *)(24)
        iEnergy(int, const double *, const VecDoub &)(112)
        Atomic_Eng(const int *, const double *, int, const VecDoub *)(291)
        DFP_minimize()(378)
        Funk(VecDoub &)(493)
        ComputeLocalStrucParam(Struc_Data *&, int)(639)
        compute_error(Struc_Data *&, int, VecDoub &)(914)
        ComputeLocalStrucParam()(956)
        iCompute_LSP(const int *, const double *, int, double *)(1051)
        VolumePerAtom(const double (*)[3], int)(1146)
        Area(const VecDoub *, const VecDoub *, VecDoub &)(1154)
        One_NeighborList(const double (*)[3], double **, int, int *&, double *&)(1183)
        EOS(const char *, double, double, double)(1266)
        mean_sqr(const VecDoub &, double)(1352)
        max_filter(const VecDoub &, double)(1359)
        compute_hb_constraint2()(1368)
        crystal_eng(const double (*)[3], double **, int)(1422)
        crystal_eng(const double (*)[3], double **, int, const char *)(1476)
        crystalFunk(double)(1549)
        specific_bop_constraint(VecDoub &)(1558)
        compute_LSP()(1570)
        compute_atomic_LSP(int, const double *, double *)(1594)

  File: elastic.cpp
        BulkModulus()(9)
        c11()(59)
        c33()(104)
        c44()(150)
        c66()(197)
        ShearModulus()(243)
        c11pc12()(290)
        c13pc11pc33()(336)
        c14pc11pc44()(381)
        CopyStruct(double (*)[3], double **, double (*)[3], double **, int)(428)
        TransformVector(double (*)[3], double (*)[3], double (*)[3])(439)
        TransformBasis(double **, double (*)[3], double **, int)(452)
        InitStrain(double (*)[3])(463)

  File: fit.cpp
        main(int, char **)(25)

  File: ga.cpp
        GeneticAlgo(VecDoub &, const VecDoub &)(20)

  File: nrvector.h
        NRvector<double>::~NRvector(NRvector<double> *)(177)

  File: surfaces.cpp
        surf100()(10)
        surf110()(207)
        surf111()(527)
        SFp111()(855)
        SFp100()(1231)
        SFp110()(1475)


  0 out of 50 routine(s) used training profile data for PGO feedback
  0 out of 50 routine(s) were unable to use training profile data for PGO feedback
  0 out of 50 routine(s) were unable to find training profile data for PGO feedback
  50 out of 50 routine(s) used a static estimate profile for PGO feedback



